<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Practices.EnterpriseLibrary.Data.4.1.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDataConfigurationSourceBuilderExtensions">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DataConfigurationSourceBuilderExtensions</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDataConfigurationSourceBuilderExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDataConfigurationSourceBuilderExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDataConfigurationSourceBuilderExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDataConfigurationSourceBuilderExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDataConfigurationSourceBuilderExtensions.ConfigureDataIConfigurationSourceBuilder">
            <summary>Sets the shim of DataConfigurationSourceBuilderExtensions.ConfigureData(IConfigurationSourceBuilder configurationSourceBuilderRoot)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Common.Configuration.DatabaseProviderExtensions</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.ASqlCeDatabaseIDatabaseConfigurationProviders">
            <summary>Sets the shim of DatabaseProviderExtensions.ASqlCeDatabase(IDatabaseConfigurationProviders context)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.ASqlDatabaseIDatabaseConfigurationProviders">
            <summary>Sets the shim of DatabaseProviderExtensions.ASqlDatabase(IDatabaseConfigurationProviders context)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.AnOdbcDatabaseIDatabaseConfigurationProviders">
            <summary>Sets the shim of DatabaseProviderExtensions.AnOdbcDatabase(IDatabaseConfigurationProviders context)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.AnOleDbDatabaseIDatabaseConfigurationProviders">
            <summary>Sets the shim of DatabaseProviderExtensions.AnOleDbDatabase(IDatabaseConfigurationProviders context)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.AnOracleDatabaseIDatabaseConfigurationProviders">
            <summary>Sets the shim of DatabaseProviderExtensions.AnOracleDatabase(IDatabaseConfigurationProviders context)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.AnotherDatabaseTypeIDatabaseConfigurationProvidersString">
            <summary>Sets the shim of DatabaseProviderExtensions.AnotherDatabaseType(IDatabaseConfigurationProviders context, String providerName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Common.Configuration.Fakes.ShimDatabaseProviderExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsCollectionMetadata">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes+ConnectionStringSettingsCollectionMetadata</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsCollectionMetadata.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime.MetadataTypes.ConnectionStringSettingsCollectionMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsCollectionMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsCollectionMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsCollectionMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsCollectionMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsCollectionMetadata.Constructor">
            <summary>Sets the shim of ConnectionStringSettingsCollectionMetadata.ConnectionStringSettingsCollectionMetadata()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes+ConnectionStringSettingsMetadata</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime.MetadataTypes.ConnectionStringSettingsMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.AllInstances.ConnectionStringSetString">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.AllInstances.NameGet">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.AllInstances.NameSetString">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.AllInstances.ProviderNameGet">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.get_ProviderName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.AllInstances.ProviderNameSetString">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.set_ProviderName(String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.ConnectionStringGet">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.ConnectionStringSetString">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.Constructor">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.ConnectionStringSettingsMetadata()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.NameGet">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.NameSetString">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.ProviderNameGet">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.get_ProviderName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringSettingsMetadata.ProviderNameSetString">
            <summary>Sets the shim of ConnectionStringSettingsMetadata.set_ProviderName(String value)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringsSectionMetadata">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes+ConnectionStringsSectionMetadata</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringsSectionMetadata.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime.MetadataTypes.ConnectionStringsSectionMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringsSectionMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringsSectionMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringsSectionMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringsSectionMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimConnectionStringsSectionMetadata.Constructor">
            <summary>Sets the shim of ConnectionStringsSectionMetadata.ConnectionStringsSectionMetadata()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime+MetadataTypes+DbProviderMappingMetadata</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DataAccessDesignTime.MetadataTypes.DbProviderMappingMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.AllInstances.NameGet">
            <summary>Sets the shim of DbProviderMappingMetadata.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.AllInstances.NameSetString">
            <summary>Sets the shim of DbProviderMappingMetadata.set_Name(String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.Constructor">
            <summary>Sets the shim of DbProviderMappingMetadata.DbProviderMappingMetadata()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.NameGet">
            <summary>Sets the shim of DbProviderMappingMetadata.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDataAccessDesignTime.ShimMetadataTypes.ShimDbProviderMappingMetadata.NameSetString">
            <summary>Sets the shim of DbProviderMappingMetadata.set_Name(String value)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.AllInstances.ConfigurationSourceGet">
            <summary>Sets the shim of DatabaseData.get_ConfigurationSource()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.AllInstances.ConfigurationSourceSetFuncOfStringConfigurationSection">
            <summary>Sets the shim of DatabaseData.set_ConfigurationSource(Func`2&lt;String,ConfigurationSection&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of DatabaseData.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.AllInstances.ConnectionStringSettingsGet">
            <summary>Sets the shim of DatabaseData.get_ConnectionStringSettings()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.AllInstances.ConnectionStringSettingsSetConnectionStringSettings">
            <summary>Sets the shim of DatabaseData.set_ConnectionStringSettings(ConnectionStringSettings value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.AllInstances.NameGet">
            <summary>Sets the shim of DatabaseData.get_Name()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.ConfigurationSourceGet">
            <summary>Sets the shim of DatabaseData.get_ConfigurationSource()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.ConfigurationSourceSetFuncOfStringConfigurationSection">
            <summary>Sets the shim of DatabaseData.set_ConfigurationSource(Func`2&lt;String,ConfigurationSection&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.ConnectionStringGet">
            <summary>Sets the shim of DatabaseData.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.ConnectionStringSettingsGet">
            <summary>Sets the shim of DatabaseData.get_ConnectionStringSettings()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.ConnectionStringSettingsSetConnectionStringSettings">
            <summary>Sets the shim of DatabaseData.set_ConnectionStringSettings(ConnectionStringSettings value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.ConstructorConnectionStringSettingsFuncOfStringConfigurationSection">
            <summary>Sets the shim of DatabaseData.DatabaseData(ConnectionStringSettings connectionStringSettings, Func`2&lt;String,ConfigurationSection&gt; configurationSource)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseData.NameGet">
            <summary>Sets the shim of DatabaseData.get_Name()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.AllInstances.DefaultDatabaseGet">
            <summary>Sets the shim of DatabaseSettings.get_DefaultDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.AllInstances.DefaultDatabaseSetString">
            <summary>Sets the shim of DatabaseSettings.set_DefaultDatabase(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.AllInstances.ProviderMappingsGet">
            <summary>Sets the shim of DatabaseSettings.get_ProviderMappings()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.Constructor">
            <summary>Sets the shim of DatabaseSettings.DatabaseSettings()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.DefaultDatabaseGet">
            <summary>Sets the shim of DatabaseSettings.get_DefaultDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.DefaultDatabaseSetString">
            <summary>Sets the shim of DatabaseSettings.set_DefaultDatabase(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.GetDatabaseSettingsIConfigurationSource">
            <summary>Sets the shim of DatabaseSettings.GetDatabaseSettings(IConfigurationSource configurationSource)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSettings.ProviderMappingsGet">
            <summary>Sets the shim of DatabaseSettings.get_ProviderMappings()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSyntheticConfigSettings</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSyntheticConfigSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.AllInstances.DatabasesGet">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.get_Databases()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.AllInstances.DefaultDatabaseGet">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.get_DefaultDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.AllInstances.GetConnectionStringSettingsString">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetConnectionStringSettings(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.AllInstances.GetConnectionStrings">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetConnectionStrings()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.AllInstances.GetDatabaseDataConnectionStringSettingsDatabaseSettings">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetDatabaseData(ConnectionStringSettings connectionString, DatabaseSettings databaseSettings)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.AllInstances.GetDatabaseString">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetDatabase(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.AllInstances.GetProviderMappingString">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetProviderMapping(String dbProviderName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.ConstructorFuncOfStringConfigurationSection">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.DatabaseSyntheticConfigSettings(Func`2&lt;String,ConfigurationSection&gt; configurationSource)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.ConstructorIConfigurationSource">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.DatabaseSyntheticConfigSettings(IConfigurationSource configurationSource)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.CreateDatabaseDataTypeConnectionStringSettingsFuncOfStringConfigurationSection">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.CreateDatabaseData(Type configurationElementType, ConnectionStringSettings settings, Func`2&lt;String,ConfigurationSection&gt; source)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.DatabasesGet">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.get_Databases()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.DefaultDatabaseGet">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.get_DefaultDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetAttributeType">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetAttribute(Type databaseType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetConnectionStringSettingsString">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetConnectionStringSettings(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetConnectionStrings">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetConnectionStrings()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetDatabaseDataConnectionStringSettingsDatabaseSettings">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetDatabaseData(ConnectionStringSettings connectionString, DatabaseSettings databaseSettings)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetDatabaseString">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetDatabase(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetDefaultMappingString">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetDefaultMapping(String dbProviderName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetGenericMapping">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetGenericMapping()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetProviderMappingString">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetProviderMapping(String dbProviderName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.GetProviderMappingStringDatabaseSettings">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.GetProviderMapping(String dbProviderName, DatabaseSettings databaseSettings)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.IsValidProviderNameString">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.IsValidProviderName(String providerName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.StaticConstructor">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.DatabaseSyntheticConfigSettings()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDatabaseSyntheticConfigSettings.ValidateConnectionStringSettingsStringConnectionStringSettings">
            <summary>Sets the shim of DatabaseSyntheticConfigSettings.ValidateConnectionStringSettings(String name, ConnectionStringSettings connectionStringSettings)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DbProviderMapping</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DbProviderMapping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.AllInstances.DatabaseTypeGet">
            <summary>Sets the shim of DbProviderMapping.get_DatabaseType()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.AllInstances.DatabaseTypeNameGet">
            <summary>Sets the shim of DbProviderMapping.get_DatabaseTypeName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.AllInstances.DatabaseTypeNameSetString">
            <summary>Sets the shim of DbProviderMapping.set_DatabaseTypeName(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.AllInstances.DatabaseTypeSetType">
            <summary>Sets the shim of DbProviderMapping.set_DatabaseType(Type value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.AllInstances.DbProviderNameGet">
            <summary>Sets the shim of DbProviderMapping.get_DbProviderName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.AllInstances.NameGet">
            <summary>Sets the shim of DbProviderMapping.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.AllInstances.NameSetString">
            <summary>Sets the shim of DbProviderMapping.set_Name(String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.Bind(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IObjectWithName)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.Constructor">
            <summary>Sets the shim of DbProviderMapping.DbProviderMapping()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.ConstructorStringString">
            <summary>Sets the shim of DbProviderMapping.DbProviderMapping(String dbProviderName, String databaseTypeName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.ConstructorStringType">
            <summary>Sets the shim of DbProviderMapping.DbProviderMapping(String dbProviderName, Type databaseType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.DatabaseTypeGet">
            <summary>Sets the shim of DbProviderMapping.get_DatabaseType()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.DatabaseTypeNameGet">
            <summary>Sets the shim of DbProviderMapping.get_DatabaseTypeName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.DatabaseTypeNameSetString">
            <summary>Sets the shim of DbProviderMapping.set_DatabaseTypeName(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.DatabaseTypeSetType">
            <summary>Sets the shim of DbProviderMapping.set_DatabaseType(Type value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.DbProviderNameGet">
            <summary>Sets the shim of DbProviderMapping.get_DbProviderName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.NameGet">
            <summary>Sets the shim of DbProviderMapping.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.NameSetString">
            <summary>Sets the shim of DbProviderMapping.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimDbProviderMapping.StaticConstructor">
            <summary>Sets the shim of DbProviderMapping.DbProviderMapping()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.GenericDatabaseData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.GenericDatabaseData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.AllInstances.BuildDatabase">
            <summary>Sets the shim of GenericDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.AllInstances.ProviderNameGet">
            <summary>Sets the shim of GenericDatabaseData.get_ProviderName()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.BuildDatabase">
            <summary>Sets the shim of GenericDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.ConstructorConnectionStringSettingsFuncOfStringConfigurationSection">
            <summary>Sets the shim of GenericDatabaseData.GenericDatabaseData(ConnectionStringSettings connectionStringSettings, Func`2&lt;String,ConfigurationSection&gt; configurationSource)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.ShimGenericDatabaseData.ProviderNameGet">
            <summary>Sets the shim of GenericDatabaseData.get_ProviderName()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseData">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseData.#ctor(System.Configuration.ConnectionStringSettings,System.Func{System.String,System.Configuration.ConfigurationSection})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseData.BuildDatabase">
            <summary>Sets the stub of DatabaseData.BuildDatabase()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseData.BuildDatabase01">
            <summary>Sets the stub of DatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseData.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseData</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.DeserializeSection(System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.DeserializeSectionXmlReader">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.GetRuntimeObject">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.GetRuntimeObject01">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseSettings</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.IsModified">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.IsModified01">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ResetModified">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ResetModified01">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSettings.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSyntheticConfigSettings">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSyntheticConfigSettings</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSyntheticConfigSettings.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSyntheticConfigSettings.#ctor(System.Func{System.String,System.Configuration.ConfigurationSection})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSyntheticConfigSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSyntheticConfigSettings.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseSyntheticConfigSettings</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSyntheticConfigSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDatabaseSyntheticConfigSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DbProviderMapping</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.#ctor(System.String,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubDbProviderMapping.Name as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.InitializeStub">
            <summary>Initializes a new instance of type StubDbProviderMapping</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.Name">
            <summary>Sets the stub of DbProviderMapping.get_Name()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.NameGet">
            <summary>Sets the stub of DbProviderMapping.get_Name()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.NameSetString">
            <summary>Sets the stub of DbProviderMapping.set_Name(String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubDbProviderMapping.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubGenericDatabaseData">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.GenericDatabaseData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubGenericDatabaseData.#ctor(System.Configuration.ConnectionStringSettings,System.Func{System.String,System.Configuration.ConfigurationSection})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubGenericDatabaseData.BuildDatabase">
            <summary>Sets the stub of GenericDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubGenericDatabaseData.BuildDatabase01">
            <summary>Sets the stub of GenericDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubGenericDatabaseData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubGenericDatabaseData.InitializeStub">
            <summary>Initializes a new instance of type StubGenericDatabaseData</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubGenericDatabaseData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fakes.StubGenericDatabaseData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.DatabaseConfigurationExtension</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.DatabaseConfigurationExtension)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances.AsDefault">
            <summary>Sets the shim of DatabaseConfigurationExtension.AsDefault()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances.BuilderGet">
            <summary>Sets the shim of DatabaseConfigurationExtension.get_Builder()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of DatabaseConfigurationExtension.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances.ForDatabaseNamedString">
            <summary>Sets the shim of DatabaseConfigurationExtension.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances.MicrosoftPracticesEnterpriseLibraryCommonIFluentInterfaceGetType">
            <summary>Sets the shim of DatabaseConfigurationExtension.Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface.GetType()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances.ThatIsGet">
            <summary>Sets the shim of DatabaseConfigurationExtension.get_ThatIs()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances.WithConnectionStringDbConnectionStringBuilder">
            <summary>Sets the shim of DatabaseConfigurationExtension.WithConnectionString(DbConnectionStringBuilder builder)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AllInstances.WithConnectionStringString">
            <summary>Sets the shim of DatabaseConfigurationExtension.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.AsDefault">
            <summary>Sets the shim of DatabaseConfigurationExtension.AsDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.Bind(Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.Bind(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.Bind(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.Bind(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.BuilderGet">
            <summary>Sets the shim of DatabaseConfigurationExtension.get_Builder()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.ConnectionStringGet">
            <summary>Sets the shim of DatabaseConfigurationExtension.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.ConstructorIDatabaseConfigurationProviders">
            <summary>Sets the shim of DatabaseConfigurationExtension.DatabaseConfigurationExtension(IDatabaseConfigurationProviders context)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.ForDatabaseNamedString">
            <summary>Sets the shim of DatabaseConfigurationExtension.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.MicrosoftPracticesEnterpriseLibraryCommonIFluentInterfaceGetType">
            <summary>Sets the shim of DatabaseConfigurationExtension.Microsoft.Practices.EnterpriseLibrary.Common.IFluentInterface.GetType()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.ThatIsGet">
            <summary>Sets the shim of DatabaseConfigurationExtension.get_ThatIs()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.WithConnectionStringDbConnectionStringBuilder">
            <summary>Sets the shim of DatabaseConfigurationExtension.WithConnectionString(DbConnectionStringBuilder builder)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.ShimDatabaseConfigurationExtension.WithConnectionStringString">
            <summary>Sets the shim of DatabaseConfigurationExtension.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubDatabaseConfigurationExtension">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.DatabaseConfigurationExtension</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubDatabaseConfigurationExtension.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviders)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubDatabaseConfigurationExtension.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubDatabaseConfigurationExtension.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseConfigurationExtension</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubDatabaseConfigurationExtension.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubDatabaseConfigurationExtension.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDataConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIDataConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDataConfiguration#WithProviderNamed(System.String)">
            <summary>Sets the stub of IDataConfiguration.WithProviderNamed(String providerName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDataConfiguration.WithProviderNamedString">
            <summary>Sets the stub of IDataConfiguration.WithProviderNamed(String providerName)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseAnotherDatabaseConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseAnotherDatabaseConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseAnotherDatabaseConfiguration#WithConnectionString(System.Data.Common.DbConnectionStringBuilder)">
            <summary>Sets the stub of IDatabaseAnotherDatabaseConfiguration.WithConnectionString(DbConnectionStringBuilder builder)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProperties#AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseDefaultConnectionString#WithConnectionString(System.String)">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProviderEntry#ThatIs">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.ThatIsGet">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.WithConnectionStringDbConnectionStringBuilder">
            <summary>Sets the stub of IDatabaseAnotherDatabaseConfiguration.WithConnectionString(DbConnectionStringBuilder builder)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseAnotherDatabaseConfiguration.WithConnectionStringString">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProperties</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseConfigurationProperties</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProperties#AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProviderEntry#ThatIs">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.ThatIsGet">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProperties.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviderEntry</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseConfigurationProviderEntry</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProviderEntry#ThatIs">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.ThatIsGet">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviderEntry.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseConfigurationProviders</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseConfigurationProviders</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseConfigurationProviders.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseDefaultConnectionString</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseDefaultConnectionString</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseDefaultConnectionString#WithConnectionString(System.String)">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseDefaultConnectionString.WithConnectionStringString">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseOracleConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseOracleConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProperties#AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseOracleConfiguration#WithConnectionString(System.Data.OracleClient.OracleConnectionStringBuilder)">
            <summary>Sets the stub of IDatabaseOracleConfiguration.WithConnectionString(OracleConnectionStringBuilder builder)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseOracleConfiguration#WithConnectionString(System.String)">
            <summary>Sets the stub of IDatabaseOracleConfiguration.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseOracleConfiguration#WithPackageNamed(System.String)">
            <summary>Sets the stub of IDatabaseOracleConfiguration.WithPackageNamed(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProviderEntry#ThatIs">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.ThatIsGet">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.WithConnectionStringOracleConnectionStringBuilder">
            <summary>Sets the stub of IDatabaseOracleConfiguration.WithConnectionString(OracleConnectionStringBuilder builder)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.WithConnectionStringString">
            <summary>Sets the stub of IDatabaseOracleConfiguration.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOracleConfiguration.WithPackageNamedString">
            <summary>Sets the stub of IDatabaseOracleConfiguration.WithPackageNamed(String name)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseOraclePackageConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseOraclePackageConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.AndPrefixString">
            <summary>Sets the stub of IDatabaseOraclePackageConfiguration.AndPrefix(String prefix)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseOraclePackageConfiguration#AndPrefix(System.String)">
            <summary>Sets the stub of IDatabaseOraclePackageConfiguration.AndPrefix(String prefix)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseOraclePackageConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseProviderConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseProviderConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.MappedToDatabaseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDataConfiguration})">
            <summary>Sets stubs of MappedToDatabase()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.MappedToDatabaseType">
            <summary>Sets the stub of IDatabaseProviderConfiguration.MappedToDatabase(Type databaseType)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDataConfiguration#WithProviderNamed(System.String)">
            <summary>Sets the stub of IDataConfiguration.WithProviderNamed(String providerName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseProviderConfiguration#MappedToDatabase``1">
            <summary>Sets the stub of IDatabaseProviderConfiguration.MappedToDatabase()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseProviderConfiguration#MappedToDatabase(System.Type)">
            <summary>Sets the stub of IDatabaseProviderConfiguration.MappedToDatabase(Type databaseType)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderConfiguration.WithProviderNamedString">
            <summary>Sets the stub of IDataConfiguration.WithProviderNamed(String providerName)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderExtensionContext">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseProviderExtensionContext</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderExtensionContext.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseProviderExtensionContext</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderExtensionContext.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseProviderExtensionContext#Builder">
            <summary>Sets the stub of IDatabaseProviderExtensionContext.get_Builder()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderExtensionContext.BuilderGet">
            <summary>Sets the stub of IDatabaseProviderExtensionContext.get_Builder()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderExtensionContext.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseProviderExtensionContext#ConnectionString">
            <summary>Sets the stub of IDatabaseProviderExtensionContext.get_ConnectionString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseProviderExtensionContext.ConnectionStringGet">
            <summary>Sets the stub of IDatabaseProviderExtensionContext.get_ConnectionString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseSqlCeDatabaseConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseSqlCeDatabaseConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProperties#AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseDefaultConnectionString#WithConnectionString(System.String)">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProviderEntry#ThatIs">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.ThatIsGet">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlCeDatabaseConfiguration.WithConnectionStringString">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IDatabaseSqlDatabaseConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIDatabaseSqlDatabaseConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProperties#AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseDefaultConnectionString#WithConnectionString(System.String)">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseSqlDatabaseConfiguration#WithConnectionString(System.Data.SqlClient.SqlConnectionStringBuilder)">
            <summary>Sets the stub of IDatabaseSqlDatabaseConfiguration.WithConnectionString(SqlConnectionStringBuilder builder)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProviderEntry#ThatIs">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.ThatIsGet">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.WithConnectionStringSqlConnectionStringBuilder">
            <summary>Sets the stub of IDatabaseSqlDatabaseConfiguration.WithConnectionString(SqlConnectionStringBuilder builder)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIDatabaseSqlDatabaseConfiguration.WithConnectionStringString">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IOdbcDatabaseConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIOdbcDatabaseConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProperties#AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseDefaultConnectionString#WithConnectionString(System.String)">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IOdbcDatabaseConfiguration#WithConnectionString(System.Data.Odbc.OdbcConnectionStringBuilder)">
            <summary>Sets the stub of IOdbcDatabaseConfiguration.WithConnectionString(OdbcConnectionStringBuilder builder)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProviderEntry#ThatIs">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.ThatIsGet">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.WithConnectionStringOdbcConnectionStringBuilder">
            <summary>Sets the stub of IOdbcDatabaseConfiguration.WithConnectionString(OdbcConnectionStringBuilder builder)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOdbcDatabaseConfiguration.WithConnectionStringString">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.IOleDbDatabaseConfiguration</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.#ctor">
            <summary>Initializes a new instance of type StubIOleDbDatabaseConfiguration</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.ForDatabaseNamedString">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfiguration#ForDatabaseNamed(System.String)">
            <summary>Sets the stub of IDatabaseConfiguration.ForDatabaseNamed(String databaseName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProperties#AsDefault">
            <summary>Sets the stub of IDatabaseConfigurationProperties.AsDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseDefaultConnectionString#WithConnectionString(System.String)">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IOleDbDatabaseConfiguration#WithConnectionString(System.Data.OleDb.OleDbConnectionStringBuilder)">
            <summary>Sets the stub of IOleDbDatabaseConfiguration.WithConnectionString(OleDbConnectionStringBuilder builder)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.Microsoft#Practices#EnterpriseLibrary#Data#Configuration#Fluent#IDatabaseConfigurationProviderEntry#ThatIs">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.ThatIsGet">
            <summary>Sets the stub of IDatabaseConfigurationProviderEntry.get_ThatIs()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.WithConnectionStringOleDbConnectionStringBuilder">
            <summary>Sets the stub of IOleDbDatabaseConfiguration.WithConnectionString(OleDbConnectionStringBuilder builder)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Configuration.Fluent.Fakes.StubIOleDbDatabaseConfiguration.WithConnectionStringString">
            <summary>Sets the stub of IDatabaseDefaultConnectionString.WithConnectionString(String connectionString)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.ColumnNameMapping</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.ColumnNameMapping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.AllInstances.ColumnNameGet">
            <summary>Sets the shim of ColumnNameMapping.get_ColumnName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.AllInstances.ColumnNameSetString">
            <summary>Sets the shim of ColumnNameMapping.set_ColumnName(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.AllInstances.GetPropertyValueIDataRecord">
            <summary>Sets the shim of ColumnNameMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.ColumnNameGet">
            <summary>Sets the shim of ColumnNameMapping.get_ColumnName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.ColumnNameSetString">
            <summary>Sets the shim of ColumnNameMapping.set_ColumnName(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.ConstructorPropertyInfoString">
            <summary>Sets the shim of ColumnNameMapping.ColumnNameMapping(PropertyInfo property, String columnName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimColumnNameMapping.GetPropertyValueIDataRecord">
            <summary>Sets the shim of ColumnNameMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.CommandAccessor`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.CommandAccessor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.AllInstances.BeginExecuteDbCommandIParameterMapperAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of CommandAccessor`1.BeginExecute(DbCommand command, IParameterMapper parameterMapper, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.AllInstances.DatabaseGet">
            <summary>Sets the shim of CommandAccessor`1.get_Database()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.AllInstances.EndExecuteIAsyncResult">
            <summary>Sets the shim of CommandAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.AllInstances.ExecuteDbCommand">
            <summary>Sets the shim of CommandAccessor`1.Execute(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.AllInstances.GuardAsyncAllowed">
            <summary>Sets the shim of CommandAccessor`1.GuardAsyncAllowed()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.BeginExecuteDbCommandIParameterMapperAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of CommandAccessor`1.BeginExecute(DbCommand command, IParameterMapper parameterMapper, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.ConstructorDatabaseIResultSetMapperOfT0">
            <summary>Sets the shim of CommandAccessor`1.CommandAccessor`1(Database database, IResultSetMapper`1&lt;!0&gt; resultSetMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.ConstructorDatabaseIRowMapperOfT0">
            <summary>Sets the shim of CommandAccessor`1.CommandAccessor`1(Database database, IRowMapper`1&lt;!0&gt; rowMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.DatabaseGet">
            <summary>Sets the shim of CommandAccessor`1.get_Database()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.EndExecuteIAsyncResult">
            <summary>Sets the shim of CommandAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.ExecuteDbCommand">
            <summary>Sets the shim of CommandAccessor`1.Execute(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimCommandAccessor`1.GuardAsyncAllowed">
            <summary>Sets the shim of CommandAccessor`1.GuardAsyncAllowed()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.ConnectionString</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.ConnectionString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.CreateNewConnectionStringString">
            <summary>Sets the shim of ConnectionString.CreateNewConnectionString(String connectionStringToFormat)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.GetTokenPositionsStringInt32OutInt32Out">
            <summary>Sets the shim of ConnectionString.GetTokenPositions(String tokenString, Int32&amp; tokenPos, Int32&amp; tokenMPos)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.PasswordGet">
            <summary>Sets the shim of ConnectionString.get_Password()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.PasswordSetString">
            <summary>Sets the shim of ConnectionString.set_Password(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.RemoveCredentialsString">
            <summary>Sets the shim of ConnectionString.RemoveCredentials(String connectionStringToModify)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.ToString01">
            <summary>Sets the shim of ConnectionString.ToString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.ToStringNoCredentials">
            <summary>Sets the shim of ConnectionString.ToStringNoCredentials()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.UserNameGet">
            <summary>Sets the shim of ConnectionString.get_UserName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.AllInstances.UserNameSetString">
            <summary>Sets the shim of ConnectionString.set_UserName(String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.ConstructorStringStringString">
            <summary>Sets the shim of ConnectionString.ConnectionString(String connectionString, String userIdTokens, String passwordTokens)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.CreateNewConnectionStringString">
            <summary>Sets the shim of ConnectionString.CreateNewConnectionString(String connectionStringToFormat)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.GetTokenPositionsStringInt32OutInt32Out">
            <summary>Sets the shim of ConnectionString.GetTokenPositions(String tokenString, Int32&amp; tokenPos, Int32&amp; tokenMPos)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.PasswordGet">
            <summary>Sets the shim of ConnectionString.get_Password()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.PasswordSetString">
            <summary>Sets the shim of ConnectionString.set_Password(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.RemoveCredentialsString">
            <summary>Sets the shim of ConnectionString.RemoveCredentials(String connectionStringToModify)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.ToString">
            <summary>Sets the shim of ConnectionString.ToString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.ToStringNoCredentials">
            <summary>Sets the shim of ConnectionString.ToStringNoCredentials()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.UserNameGet">
            <summary>Sets the shim of ConnectionString.get_UserName()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimConnectionString.UserNameSetString">
            <summary>Sets the shim of ConnectionString.set_UserName(String value)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.DaabAsyncResult</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.DaabAsyncResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.AsyncStateGet">
            <summary>Sets the shim of DaabAsyncResult.get_AsyncState()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.AsyncWaitHandleGet">
            <summary>Sets the shim of DaabAsyncResult.get_AsyncWaitHandle()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.CloseConnectionGet">
            <summary>Sets the shim of DaabAsyncResult.get_CloseConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.CommandGet">
            <summary>Sets the shim of DaabAsyncResult.get_Command()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.CompletedSynchronouslyGet">
            <summary>Sets the shim of DaabAsyncResult.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.ConnectionGet">
            <summary>Sets the shim of DaabAsyncResult.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.DisposeCommandGet">
            <summary>Sets the shim of DaabAsyncResult.get_DisposeCommand()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.InnerAsyncResultGet">
            <summary>Sets the shim of DaabAsyncResult.get_InnerAsyncResult()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.IsCompletedGet">
            <summary>Sets the shim of DaabAsyncResult.get_IsCompleted()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AllInstances.StartTimeGet">
            <summary>Sets the shim of DaabAsyncResult.get_StartTime()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AsyncStateGet">
            <summary>Sets the shim of DaabAsyncResult.get_AsyncState()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.AsyncWaitHandleGet">
            <summary>Sets the shim of DaabAsyncResult.get_AsyncWaitHandle()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.CloseConnectionGet">
            <summary>Sets the shim of DaabAsyncResult.get_CloseConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.CommandGet">
            <summary>Sets the shim of DaabAsyncResult.get_Command()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.CompletedSynchronouslyGet">
            <summary>Sets the shim of DaabAsyncResult.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.ConnectionGet">
            <summary>Sets the shim of DaabAsyncResult.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.ConstructorIAsyncResultDbCommandBooleanBooleanDateTime">
            <summary>Sets the shim of DaabAsyncResult.DaabAsyncResult(IAsyncResult innerAsyncResult, DbCommand command, Boolean disposeCommand, Boolean closeConnection, DateTime startTime)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.DisposeCommandGet">
            <summary>Sets the shim of DaabAsyncResult.get_DisposeCommand()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.InnerAsyncResultGet">
            <summary>Sets the shim of DaabAsyncResult.get_InnerAsyncResult()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.IsCompletedGet">
            <summary>Sets the shim of DaabAsyncResult.get_IsCompleted()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDaabAsyncResult.StartTimeGet">
            <summary>Sets the shim of DaabAsyncResult.get_StartTime()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataAccessor`1">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataAccessor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataAccessor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataAccessor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataAccessor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataAccessor`1.Constructor">
            <summary>Sets the shim of DataAccessor`1.DataAccessor`1()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.DataReaderWrapper</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.DataReaderWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.Close">
            <summary>Sets the shim of DataReaderWrapper.Close()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.DepthGet">
            <summary>Sets the shim of DataReaderWrapper.get_Depth()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.Dispose">
            <summary>Sets the shim of DataReaderWrapper.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DataReaderWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.FieldCountGet">
            <summary>Sets the shim of DataReaderWrapper.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetBooleanInt32">
            <summary>Sets the shim of DataReaderWrapper.GetBoolean(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetByteInt32">
            <summary>Sets the shim of DataReaderWrapper.GetByte(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of DataReaderWrapper.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetCharInt32">
            <summary>Sets the shim of DataReaderWrapper.GetChar(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of DataReaderWrapper.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetDataInt32">
            <summary>Sets the shim of DataReaderWrapper.GetData(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetDataTypeNameInt32">
            <summary>Sets the shim of DataReaderWrapper.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetDateTimeInt32">
            <summary>Sets the shim of DataReaderWrapper.GetDateTime(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetDecimalInt32">
            <summary>Sets the shim of DataReaderWrapper.GetDecimal(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetDoubleInt32">
            <summary>Sets the shim of DataReaderWrapper.GetDouble(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetFieldTypeInt32">
            <summary>Sets the shim of DataReaderWrapper.GetFieldType(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetFloatInt32">
            <summary>Sets the shim of DataReaderWrapper.GetFloat(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetGuidInt32">
            <summary>Sets the shim of DataReaderWrapper.GetGuid(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetInt16Int32">
            <summary>Sets the shim of DataReaderWrapper.GetInt16(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetInt32Int32">
            <summary>Sets the shim of DataReaderWrapper.GetInt32(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetInt64Int32">
            <summary>Sets the shim of DataReaderWrapper.GetInt64(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetNameInt32">
            <summary>Sets the shim of DataReaderWrapper.GetName(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetOrdinalString">
            <summary>Sets the shim of DataReaderWrapper.GetOrdinal(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetSchemaTable">
            <summary>Sets the shim of DataReaderWrapper.GetSchemaTable()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetStringInt32">
            <summary>Sets the shim of DataReaderWrapper.GetString(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetValueInt32">
            <summary>Sets the shim of DataReaderWrapper.GetValue(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.GetValuesObjectArray">
            <summary>Sets the shim of DataReaderWrapper.GetValues(Object[] values)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.InnerReaderGet">
            <summary>Sets the shim of DataReaderWrapper.get_InnerReader()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.IsClosedGet">
            <summary>Sets the shim of DataReaderWrapper.get_IsClosed()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.IsDBNullInt32">
            <summary>Sets the shim of DataReaderWrapper.IsDBNull(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.ItemSystemDataIDataRecordgetInt32">
            <summary>Sets the shim of DataReaderWrapper.System.Data.IDataRecord.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.ItemSystemDataIDataRecordgetString">
            <summary>Sets the shim of DataReaderWrapper.System.Data.IDataRecord.get_Item(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.NextResult">
            <summary>Sets the shim of DataReaderWrapper.NextResult()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.Read">
            <summary>Sets the shim of DataReaderWrapper.Read()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.AllInstances.RecordsAffectedGet">
            <summary>Sets the shim of DataReaderWrapper.get_RecordsAffected()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.Bind(System.Data.IDataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.Close">
            <summary>Sets the shim of DataReaderWrapper.Close()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.ConstructorIDataReader">
            <summary>Sets the shim of DataReaderWrapper.DataReaderWrapper(IDataReader innerReader)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.DepthGet">
            <summary>Sets the shim of DataReaderWrapper.get_Depth()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.Dispose">
            <summary>Sets the shim of DataReaderWrapper.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.DisposeBoolean">
            <summary>Sets the shim of DataReaderWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.FieldCountGet">
            <summary>Sets the shim of DataReaderWrapper.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetBooleanInt32">
            <summary>Sets the shim of DataReaderWrapper.GetBoolean(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetByteInt32">
            <summary>Sets the shim of DataReaderWrapper.GetByte(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of DataReaderWrapper.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetCharInt32">
            <summary>Sets the shim of DataReaderWrapper.GetChar(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of DataReaderWrapper.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetDataInt32">
            <summary>Sets the shim of DataReaderWrapper.GetData(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetDataTypeNameInt32">
            <summary>Sets the shim of DataReaderWrapper.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetDateTimeInt32">
            <summary>Sets the shim of DataReaderWrapper.GetDateTime(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetDecimalInt32">
            <summary>Sets the shim of DataReaderWrapper.GetDecimal(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetDoubleInt32">
            <summary>Sets the shim of DataReaderWrapper.GetDouble(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetFieldTypeInt32">
            <summary>Sets the shim of DataReaderWrapper.GetFieldType(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetFloatInt32">
            <summary>Sets the shim of DataReaderWrapper.GetFloat(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetGuidInt32">
            <summary>Sets the shim of DataReaderWrapper.GetGuid(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetInt16Int32">
            <summary>Sets the shim of DataReaderWrapper.GetInt16(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetInt32Int32">
            <summary>Sets the shim of DataReaderWrapper.GetInt32(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetInt64Int32">
            <summary>Sets the shim of DataReaderWrapper.GetInt64(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetNameInt32">
            <summary>Sets the shim of DataReaderWrapper.GetName(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetOrdinalString">
            <summary>Sets the shim of DataReaderWrapper.GetOrdinal(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetSchemaTable">
            <summary>Sets the shim of DataReaderWrapper.GetSchemaTable()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetStringInt32">
            <summary>Sets the shim of DataReaderWrapper.GetString(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetValueInt32">
            <summary>Sets the shim of DataReaderWrapper.GetValue(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.GetValuesObjectArray">
            <summary>Sets the shim of DataReaderWrapper.GetValues(Object[] values)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.InnerReaderGet">
            <summary>Sets the shim of DataReaderWrapper.get_InnerReader()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.IsClosedGet">
            <summary>Sets the shim of DataReaderWrapper.get_IsClosed()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.IsDBNullInt32">
            <summary>Sets the shim of DataReaderWrapper.IsDBNull(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.ItemSystemDataIDataRecordgetInt32">
            <summary>Sets the shim of DataReaderWrapper.System.Data.IDataRecord.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.ItemSystemDataIDataRecordgetString">
            <summary>Sets the shim of DataReaderWrapper.System.Data.IDataRecord.get_Item(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.NextResult">
            <summary>Sets the shim of DataReaderWrapper.NextResult()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.Read">
            <summary>Sets the shim of DataReaderWrapper.Read()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDataReaderWrapper.RecordsAffectedGet">
            <summary>Sets the shim of DataReaderWrapper.get_RecordsAffected()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Database</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AddInParameterDbCommandStringDbType">
            <summary>Sets the shim of Database.AddInParameter(DbCommand command, String name, DbType dbType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AddInParameterDbCommandStringDbTypeObject">
            <summary>Sets the shim of Database.AddInParameter(DbCommand command, String name, DbType dbType, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AddInParameterDbCommandStringDbTypeStringDataRowVersion">
            <summary>Sets the shim of Database.AddInParameter(DbCommand command, String name, DbType dbType, String sourceColumn, DataRowVersion sourceVersion)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AddOutParameterDbCommandStringDbTypeInt32">
            <summary>Sets the shim of Database.AddOutParameter(DbCommand command, String name, DbType dbType, Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AddParameterDbCommandStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of Database.AddParameter(DbCommand command, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AddParameterDbCommandStringDbTypeParameterDirectionStringDataRowVersionObject">
            <summary>Sets the shim of Database.AddParameter(DbCommand command, String name, DbType dbType, ParameterDirection direction, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AddInParameterDbCommandStringDbType">
            <summary>Sets the shim of Database.AddInParameter(DbCommand command, String name, DbType dbType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AddInParameterDbCommandStringDbTypeObject">
            <summary>Sets the shim of Database.AddInParameter(DbCommand command, String name, DbType dbType, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AddInParameterDbCommandStringDbTypeStringDataRowVersion">
            <summary>Sets the shim of Database.AddInParameter(DbCommand command, String name, DbType dbType, String sourceColumn, DataRowVersion sourceVersion)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AddOutParameterDbCommandStringDbTypeInt32">
            <summary>Sets the shim of Database.AddOutParameter(DbCommand command, String name, DbType dbType, Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AddParameterDbCommandStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of Database.AddParameter(DbCommand command, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AddParameterDbCommandStringDbTypeParameterDirectionStringDataRowVersionObject">
            <summary>Sets the shim of Database.AddParameter(DbCommand command, String name, DbType dbType, ParameterDirection direction, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AssignParameterValuesDbCommandObjectArray">
            <summary>Sets the shim of Database.AssignParameterValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AssignParametersDbCommandObjectArray">
            <summary>Sets the shim of Database.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.AsyncNotSupported">
            <summary>Sets the shim of Database.AsyncNotSupported()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteNonQueryCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteNonQueryDbCommandAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteNonQueryDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteNonQueryDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteNonQueryDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteNonQueryStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteReaderCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteReaderDbCommandAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteReaderDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteReaderDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteReaderStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteScalarCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteScalarDbCommandAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteScalarDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteScalarDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteScalarDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BeginExecuteScalarStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.BuildParameterNameString">
            <summary>Sets the shim of Database.BuildParameterName(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ConfigureParameterDbParameterStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of Database.ConfigureParameter(DbParameter param, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of Database.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ConnectionStringNoCredentialsGet">
            <summary>Sets the shim of Database.get_ConnectionStringNoCredentials()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ConnectionStringWithoutCredentialsGet">
            <summary>Sets the shim of Database.get_ConnectionStringWithoutCredentials()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.CreateCommandByCommandTypeCommandTypeString">
            <summary>Sets the shim of Database.CreateCommandByCommandType(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.CreateConnection">
            <summary>Sets the shim of Database.CreateConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.CreateParameterString">
            <summary>Sets the shim of Database.CreateParameter(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.CreateParameterStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of Database.CreateParameter(String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.CreateWrappedReaderDatabaseConnectionWrapperIDataReader">
            <summary>Sets the shim of Database.CreateWrappedReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.DbProviderFactoryGet">
            <summary>Sets the shim of Database.get_DbProviderFactory()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.DiscoverParametersDbCommand">
            <summary>Sets the shim of Database.DiscoverParameters(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.DoExecuteNonQueryDbCommand">
            <summary>Sets the shim of Database.DoExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.DoExecuteReaderDbCommandCommandBehavior">
            <summary>Sets the shim of Database.DoExecuteReader(DbCommand command, CommandBehavior cmdBehavior)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.DoExecuteScalarIDbCommand">
            <summary>Sets the shim of Database.DoExecuteScalar(IDbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.DoLoadDataSetIDbCommandDataSetStringArray">
            <summary>Sets the shim of Database.DoLoadDataSet(IDbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.DoUpdateDataSetUpdateBehaviorDataSetStringIDbCommandIDbCommandIDbCommandNullableOfInt32">
            <summary>Sets the shim of Database.DoUpdateDataSet(UpdateBehavior behavior, DataSet dataSet, String tableName, IDbCommand insertCommand, IDbCommand updateCommand, IDbCommand deleteCommand, Nullable`1&lt;Int32&gt; updateBatchSize)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.EndExecuteNonQueryIAsyncResult">
            <summary>Sets the shim of Database.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.EndExecuteReaderIAsyncResult">
            <summary>Sets the shim of Database.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.EndExecuteScalarIAsyncResult">
            <summary>Sets the shim of Database.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteDataSetCommandTypeString">
            <summary>Sets the shim of Database.ExecuteDataSet(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteDataSetDbCommand">
            <summary>Sets the shim of Database.ExecuteDataSet(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteDataSetDbCommandDbTransaction">
            <summary>Sets the shim of Database.ExecuteDataSet(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteDataSetDbTransactionCommandTypeString">
            <summary>Sets the shim of Database.ExecuteDataSet(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteDataSetDbTransactionStringObjectArray">
            <summary>Sets the shim of Database.ExecuteDataSet(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteDataSetStringObjectArray">
            <summary>Sets the shim of Database.ExecuteDataSet(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteNonQueryCommandTypeString">
            <summary>Sets the shim of Database.ExecuteNonQuery(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteNonQueryDbCommand">
            <summary>Sets the shim of Database.ExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteNonQueryDbCommandDbTransaction">
            <summary>Sets the shim of Database.ExecuteNonQuery(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteNonQueryDbTransactionCommandTypeString">
            <summary>Sets the shim of Database.ExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteNonQueryDbTransactionStringObjectArray">
            <summary>Sets the shim of Database.ExecuteNonQuery(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteNonQueryStringObjectArray">
            <summary>Sets the shim of Database.ExecuteNonQuery(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteReaderCommandTypeString">
            <summary>Sets the shim of Database.ExecuteReader(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteReaderDbCommand">
            <summary>Sets the shim of Database.ExecuteReader(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteReaderDbCommandDbTransaction">
            <summary>Sets the shim of Database.ExecuteReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteReaderDbTransactionCommandTypeString">
            <summary>Sets the shim of Database.ExecuteReader(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteReaderDbTransactionStringObjectArray">
            <summary>Sets the shim of Database.ExecuteReader(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteReaderStringObjectArray">
            <summary>Sets the shim of Database.ExecuteReader(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteScalarCommandTypeString">
            <summary>Sets the shim of Database.ExecuteScalar(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteScalarDbCommand">
            <summary>Sets the shim of Database.ExecuteScalar(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteScalarDbCommandDbTransaction">
            <summary>Sets the shim of Database.ExecuteScalar(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteScalarDbTransactionCommandTypeString">
            <summary>Sets the shim of Database.ExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteScalarDbTransactionStringObjectArray">
            <summary>Sets the shim of Database.ExecuteScalar(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.ExecuteScalarStringObjectArray">
            <summary>Sets the shim of Database.ExecuteScalar(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetDataAdapter">
            <summary>Sets the shim of Database.GetDataAdapter()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetDataAdapterUpdateBehavior">
            <summary>Sets the shim of Database.GetDataAdapter(UpdateBehavior updateBehavior)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetNewOpenConnection">
            <summary>Sets the shim of Database.GetNewOpenConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetOpenConnection">
            <summary>Sets the shim of Database.GetOpenConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetParameterValueDbCommandString">
            <summary>Sets the shim of Database.GetParameterValue(DbCommand command, String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetSqlStringCommandString">
            <summary>Sets the shim of Database.GetSqlStringCommand(String query)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetStoredProcCommandString">
            <summary>Sets the shim of Database.GetStoredProcCommand(String storedProcedureName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetStoredProcCommandStringObjectArray">
            <summary>Sets the shim of Database.GetStoredProcCommand(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetStoredProcCommandWithSourceColumnsStringStringArray">
            <summary>Sets the shim of Database.GetStoredProcCommandWithSourceColumns(String storedProcedureName, String[] sourceColumns)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.GetWrappedConnection">
            <summary>Sets the shim of Database.GetWrappedConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.LoadDataSetCommandTypeStringDataSetStringArray">
            <summary>Sets the shim of Database.LoadDataSet(CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.LoadDataSetDbCommandDataSetString">
            <summary>Sets the shim of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.LoadDataSetDbCommandDataSetStringArray">
            <summary>Sets the shim of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.LoadDataSetDbCommandDataSetStringArrayDbTransaction">
            <summary>Sets the shim of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.LoadDataSetDbCommandDataSetStringDbTransaction">
            <summary>Sets the shim of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.LoadDataSetDbTransactionCommandTypeStringDataSetStringArray">
            <summary>Sets the shim of Database.LoadDataSet(DbTransaction transaction, CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.LoadDataSetDbTransactionStringDataSetStringArrayObjectArray">
            <summary>Sets the shim of Database.LoadDataSet(DbTransaction transaction, String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.LoadDataSetStringDataSetStringArrayObjectArray">
            <summary>Sets the shim of Database.LoadDataSet(String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.SameNumberOfParametersAndValuesDbCommandObjectArray">
            <summary>Sets the shim of Database.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.SetParameterValueDbCommandStringObject">
            <summary>Sets the shim of Database.SetParameterValue(DbCommand command, String parameterName, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.SetUpRowUpdatedEventDbDataAdapter">
            <summary>Sets the shim of Database.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.SupportsAsyncGet">
            <summary>Sets the shim of Database.get_SupportsAsync()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.SupportsParemeterDiscoveryGet">
            <summary>Sets the shim of Database.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.UpdateDataSetDataSetStringDbCommandDbCommandDbCommandDbTransaction">
            <summary>Sets the shim of Database.UpdateDataSet(DataSet dataSet, String tableName, DbCommand insertCommand, DbCommand updateCommand, DbCommand deleteCommand, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.UpdateDataSetDataSetStringDbCommandDbCommandDbCommandDbTransactionNullableOfInt32">
            <summary>Sets the shim of Database.UpdateDataSet(DataSet dataSet, String tableName, DbCommand insertCommand, DbCommand updateCommand, DbCommand deleteCommand, DbTransaction transaction, Nullable`1&lt;Int32&gt; updateBatchSize)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.UpdateDataSetDataSetStringDbCommandDbCommandDbCommandUpdateBehavior">
            <summary>Sets the shim of Database.UpdateDataSet(DataSet dataSet, String tableName, DbCommand insertCommand, DbCommand updateCommand, DbCommand deleteCommand, UpdateBehavior updateBehavior)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.UpdateDataSetDataSetStringDbCommandDbCommandDbCommandUpdateBehaviorNullableOfInt32">
            <summary>Sets the shim of Database.UpdateDataSet(DataSet dataSet, String tableName, DbCommand insertCommand, DbCommand updateCommand, DbCommand deleteCommand, UpdateBehavior updateBehavior, Nullable`1&lt;Int32&gt; updateBatchSize)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AllInstances.UserParametersStartIndex">
            <summary>Sets the shim of Database.UserParametersStartIndex()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AssignParameterValuesDbCommandObjectArray">
            <summary>Sets the shim of Database.AssignParameterValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AssignParametersDbCommandObjectArray">
            <summary>Sets the shim of Database.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.AsyncNotSupported">
            <summary>Sets the shim of Database.AsyncNotSupported()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteNonQueryCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteNonQueryDbCommandAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteNonQueryDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteNonQueryDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteNonQueryDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteNonQueryStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteReaderCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteReaderDbCommandAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteReaderDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteReaderDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteReaderStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteScalarCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteScalarDbCommandAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteScalarDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteScalarDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of Database.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteScalarDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginExecuteScalarStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of Database.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BeginTransactionDbConnection">
            <summary>Sets the shim of Database.BeginTransaction(DbConnection connection)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.BuildParameterNameString">
            <summary>Sets the shim of Database.BuildParameterName(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ClearParameterCache">
            <summary>Sets the shim of Database.ClearParameterCache()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.CommitTransactionIDbTransaction">
            <summary>Sets the shim of Database.CommitTransaction(IDbTransaction tran)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ConfigureParameterDbParameterStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of Database.ConfigureParameter(DbParameter param, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ConnectionStringGet">
            <summary>Sets the shim of Database.get_ConnectionString()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ConnectionStringNoCredentialsGet">
            <summary>Sets the shim of Database.get_ConnectionStringNoCredentials()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ConnectionStringWithoutCredentialsGet">
            <summary>Sets the shim of Database.get_ConnectionStringWithoutCredentials()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ConstructorStringDbProviderFactory">
            <summary>Sets the shim of Database.Database(String connectionString, DbProviderFactory dbProviderFactory)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.CreateCommandByCommandTypeCommandTypeString">
            <summary>Sets the shim of Database.CreateCommandByCommandType(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.CreateConnection">
            <summary>Sets the shim of Database.CreateConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.CreateParameterString">
            <summary>Sets the shim of Database.CreateParameter(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.CreateParameterStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of Database.CreateParameter(String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.CreateWrappedReaderDatabaseConnectionWrapperIDataReader">
            <summary>Sets the shim of Database.CreateWrappedReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.DbProviderFactoryGet">
            <summary>Sets the shim of Database.get_DbProviderFactory()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.DiscoverParametersDbCommand">
            <summary>Sets the shim of Database.DiscoverParameters(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.DoExecuteNonQueryDbCommand">
            <summary>Sets the shim of Database.DoExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.DoExecuteReaderDbCommandCommandBehavior">
            <summary>Sets the shim of Database.DoExecuteReader(DbCommand command, CommandBehavior cmdBehavior)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.DoExecuteScalarIDbCommand">
            <summary>Sets the shim of Database.DoExecuteScalar(IDbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.DoLoadDataSetIDbCommandDataSetStringArray">
            <summary>Sets the shim of Database.DoLoadDataSet(IDbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.DoUpdateDataSetUpdateBehaviorDataSetStringIDbCommandIDbCommandIDbCommandNullableOfInt32">
            <summary>Sets the shim of Database.DoUpdateDataSet(UpdateBehavior behavior, DataSet dataSet, String tableName, IDbCommand insertCommand, IDbCommand updateCommand, IDbCommand deleteCommand, Nullable`1&lt;Int32&gt; updateBatchSize)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.EndExecuteNonQueryIAsyncResult">
            <summary>Sets the shim of Database.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.EndExecuteReaderIAsyncResult">
            <summary>Sets the shim of Database.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.EndExecuteScalarIAsyncResult">
            <summary>Sets the shim of Database.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteDataSetCommandTypeString">
            <summary>Sets the shim of Database.ExecuteDataSet(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteDataSetDbCommand">
            <summary>Sets the shim of Database.ExecuteDataSet(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteDataSetDbCommandDbTransaction">
            <summary>Sets the shim of Database.ExecuteDataSet(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteDataSetDbTransactionCommandTypeString">
            <summary>Sets the shim of Database.ExecuteDataSet(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteDataSetDbTransactionStringObjectArray">
            <summary>Sets the shim of Database.ExecuteDataSet(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteDataSetStringObjectArray">
            <summary>Sets the shim of Database.ExecuteDataSet(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteNonQueryCommandTypeString">
            <summary>Sets the shim of Database.ExecuteNonQuery(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteNonQueryDbCommand">
            <summary>Sets the shim of Database.ExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteNonQueryDbCommandDbTransaction">
            <summary>Sets the shim of Database.ExecuteNonQuery(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteNonQueryDbTransactionCommandTypeString">
            <summary>Sets the shim of Database.ExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteNonQueryDbTransactionStringObjectArray">
            <summary>Sets the shim of Database.ExecuteNonQuery(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteNonQueryStringObjectArray">
            <summary>Sets the shim of Database.ExecuteNonQuery(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteReaderCommandTypeString">
            <summary>Sets the shim of Database.ExecuteReader(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteReaderDbCommand">
            <summary>Sets the shim of Database.ExecuteReader(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteReaderDbCommandDbTransaction">
            <summary>Sets the shim of Database.ExecuteReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteReaderDbTransactionCommandTypeString">
            <summary>Sets the shim of Database.ExecuteReader(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteReaderDbTransactionStringObjectArray">
            <summary>Sets the shim of Database.ExecuteReader(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteReaderStringObjectArray">
            <summary>Sets the shim of Database.ExecuteReader(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteScalarCommandTypeString">
            <summary>Sets the shim of Database.ExecuteScalar(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteScalarDbCommand">
            <summary>Sets the shim of Database.ExecuteScalar(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteScalarDbCommandDbTransaction">
            <summary>Sets the shim of Database.ExecuteScalar(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteScalarDbTransactionCommandTypeString">
            <summary>Sets the shim of Database.ExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteScalarDbTransactionStringObjectArray">
            <summary>Sets the shim of Database.ExecuteScalar(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.ExecuteScalarStringObjectArray">
            <summary>Sets the shim of Database.ExecuteScalar(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetDataAdapter">
            <summary>Sets the shim of Database.GetDataAdapter()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetDataAdapterUpdateBehavior">
            <summary>Sets the shim of Database.GetDataAdapter(UpdateBehavior updateBehavior)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetNewOpenConnection">
            <summary>Sets the shim of Database.GetNewOpenConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetOpenConnection">
            <summary>Sets the shim of Database.GetOpenConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetParameterValueDbCommandString">
            <summary>Sets the shim of Database.GetParameterValue(DbCommand command, String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetSqlStringCommandString">
            <summary>Sets the shim of Database.GetSqlStringCommand(String query)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetStoredProcCommandString">
            <summary>Sets the shim of Database.GetStoredProcCommand(String storedProcedureName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetStoredProcCommandStringObjectArray">
            <summary>Sets the shim of Database.GetStoredProcCommand(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetStoredProcCommandWithSourceColumnsStringStringArray">
            <summary>Sets the shim of Database.GetStoredProcCommandWithSourceColumns(String storedProcedureName, String[] sourceColumns)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.GetWrappedConnection">
            <summary>Sets the shim of Database.GetWrappedConnection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.LoadDataSetCommandTypeStringDataSetStringArray">
            <summary>Sets the shim of Database.LoadDataSet(CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.LoadDataSetDbCommandDataSetString">
            <summary>Sets the shim of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.LoadDataSetDbCommandDataSetStringArray">
            <summary>Sets the shim of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.LoadDataSetDbCommandDataSetStringArrayDbTransaction">
            <summary>Sets the shim of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.LoadDataSetDbCommandDataSetStringDbTransaction">
            <summary>Sets the shim of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.LoadDataSetDbTransactionCommandTypeStringDataSetStringArray">
            <summary>Sets the shim of Database.LoadDataSet(DbTransaction transaction, CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.LoadDataSetDbTransactionStringDataSetStringArrayObjectArray">
            <summary>Sets the shim of Database.LoadDataSet(DbTransaction transaction, String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.LoadDataSetStringDataSetStringArrayObjectArray">
            <summary>Sets the shim of Database.LoadDataSet(String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.PrepareCommandDbCommandDbConnection">
            <summary>Sets the shim of Database.PrepareCommand(DbCommand command, DbConnection connection)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.PrepareCommandDbCommandDbTransaction">
            <summary>Sets the shim of Database.PrepareCommand(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.RollbackTransactionIDbTransaction">
            <summary>Sets the shim of Database.RollbackTransaction(IDbTransaction tran)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.SameNumberOfParametersAndValuesDbCommandObjectArray">
            <summary>Sets the shim of Database.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.SetParameterValueDbCommandStringObject">
            <summary>Sets the shim of Database.SetParameterValue(DbCommand command, String parameterName, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.SetUpRowUpdatedEventDbDataAdapter">
            <summary>Sets the shim of Database.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.StaticConstructor">
            <summary>Sets the shim of Database.Database()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.SupportsAsyncGet">
            <summary>Sets the shim of Database.get_SupportsAsync()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.SupportsParemeterDiscoveryGet">
            <summary>Sets the shim of Database.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.UpdateDataSetDataSetStringDbCommandDbCommandDbCommandDbTransaction">
            <summary>Sets the shim of Database.UpdateDataSet(DataSet dataSet, String tableName, DbCommand insertCommand, DbCommand updateCommand, DbCommand deleteCommand, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.UpdateDataSetDataSetStringDbCommandDbCommandDbCommandDbTransactionNullableOfInt32">
            <summary>Sets the shim of Database.UpdateDataSet(DataSet dataSet, String tableName, DbCommand insertCommand, DbCommand updateCommand, DbCommand deleteCommand, DbTransaction transaction, Nullable`1&lt;Int32&gt; updateBatchSize)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.UpdateDataSetDataSetStringDbCommandDbCommandDbCommandUpdateBehavior">
            <summary>Sets the shim of Database.UpdateDataSet(DataSet dataSet, String tableName, DbCommand insertCommand, DbCommand updateCommand, DbCommand deleteCommand, UpdateBehavior updateBehavior)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.UpdateDataSetDataSetStringDbCommandDbCommandDbCommandUpdateBehaviorNullableOfInt32">
            <summary>Sets the shim of Database.UpdateDataSet(DataSet dataSet, String tableName, DbCommand insertCommand, DbCommand updateCommand, DbCommand deleteCommand, UpdateBehavior updateBehavior, Nullable`1&lt;Int32&gt; updateBatchSize)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabase.UserParametersStartIndex">
            <summary>Sets the shim of Database.UserParametersStartIndex()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.AddRef">
            <summary>Sets the shim of DatabaseConnectionWrapper.AddRef()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.AllInstances.AddRef">
            <summary>Sets the shim of DatabaseConnectionWrapper.AddRef()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.AllInstances.ConnectionGet">
            <summary>Sets the shim of DatabaseConnectionWrapper.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.AllInstances.ConnectionSetDbConnection">
            <summary>Sets the shim of DatabaseConnectionWrapper.set_Connection(DbConnection value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.AllInstances.Dispose">
            <summary>Sets the shim of DatabaseConnectionWrapper.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DatabaseConnectionWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.AllInstances.IsDisposedGet">
            <summary>Sets the shim of DatabaseConnectionWrapper.get_IsDisposed()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.ConnectionGet">
            <summary>Sets the shim of DatabaseConnectionWrapper.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.ConnectionSetDbConnection">
            <summary>Sets the shim of DatabaseConnectionWrapper.set_Connection(DbConnection value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.ConstructorDbConnection">
            <summary>Sets the shim of DatabaseConnectionWrapper.DatabaseConnectionWrapper(DbConnection connection)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.Dispose">
            <summary>Sets the shim of DatabaseConnectionWrapper.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.DisposeBoolean">
            <summary>Sets the shim of DatabaseConnectionWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseConnectionWrapper.IsDisposedGet">
            <summary>Sets the shim of DatabaseConnectionWrapper.get_IsDisposed()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.DatabaseExtensions</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSprocAccessorOf1DatabaseString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSprocAccessor(Database database, String procedureName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSprocAccessorOf1DatabaseStringIParameterMapper``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSprocAccessor(Database database, String procedureName, IParameterMapper parameterMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSprocAccessorOf1DatabaseStringIParameterMapperIResultSetMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSprocAccessor(Database database, String procedureName, IParameterMapper parameterMapper, IResultSetMapper`1&lt;!!0&gt; resultSetMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSprocAccessorOf1DatabaseStringIParameterMapperIRowMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSprocAccessor(Database database, String procedureName, IParameterMapper parameterMapper, IRowMapper`1&lt;!!0&gt; rowMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSprocAccessorOf1DatabaseStringIResultSetMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSprocAccessor(Database database, String procedureName, IResultSetMapper`1&lt;!!0&gt; resultSetMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSprocAccessorOf1DatabaseStringIRowMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSprocAccessor(Database database, String procedureName, IRowMapper`1&lt;!!0&gt; rowMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSqlStringAccessorOf1DatabaseString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSqlStringAccessor(Database database, String sqlString)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSqlStringAccessorOf1DatabaseStringIParameterMapper``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSqlStringAccessor(Database database, String sqlString, IParameterMapper parameterMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSqlStringAccessorOf1DatabaseStringIParameterMapperIResultSetMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSqlStringAccessor(Database database, String sqlString, IParameterMapper parameterMapper, IResultSetMapper`1&lt;!!0&gt; resultSetMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSqlStringAccessorOf1DatabaseStringIParameterMapperIRowMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSqlStringAccessor(Database database, String sqlString, IParameterMapper parameterMapper, IRowMapper`1&lt;!!0&gt; rowMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSqlStringAccessorOf1DatabaseStringIResultSetMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSqlStringAccessor(Database database, String sqlString, IResultSetMapper`1&lt;!!0&gt; resultSetMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.CreateSqlStringAccessorOf1DatabaseStringIRowMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor{``0}})">
            <summary>Sets the shim of DatabaseExtensions.CreateSqlStringAccessor(Database database, String sqlString, IRowMapper`1&lt;!!0&gt; rowMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSprocAccessorOf1DatabaseStringIParameterMapperIResultSetMapperOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSprocAccessor(Database database, String procedureName, IParameterMapper parameterMapper, IResultSetMapper`1&lt;!!0&gt; resultSetMapper, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSprocAccessorOf1DatabaseStringIParameterMapperIRowMapperOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSprocAccessor(Database database, String procedureName, IParameterMapper parameterMapper, IRowMapper`1&lt;!!0&gt; rowMapper, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSprocAccessorOf1DatabaseStringIParameterMapperObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSprocAccessor(Database database, String procedureName, IParameterMapper parameterMapper, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSprocAccessorOf1DatabaseStringIResultSetMapperOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSprocAccessor(Database database, String procedureName, IResultSetMapper`1&lt;!!0&gt; resultSetMapper, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSprocAccessorOf1DatabaseStringIRowMapperOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSprocAccessor(Database database, String procedureName, IRowMapper`1&lt;!!0&gt; rowMapper, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSprocAccessorOf1DatabaseStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSprocAccessor(Database database, String procedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSqlStringAccessorOf1DatabaseString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSqlStringAccessor(Database database, String sqlString)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSqlStringAccessorOf1DatabaseStringIResultSetMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSqlStringAccessor(Database database, String sqlString, IResultSetMapper`1&lt;!!0&gt; resultSetMapper)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseExtensions.ExecuteSqlStringAccessorOf1DatabaseStringIRowMapperOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DatabaseExtensions.ExecuteSqlStringAccessor(Database database, String sqlString, IRowMapper`1&lt;!!0&gt; rowMapper)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.DatabaseFactory</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.ClearDatabaseProviderFactory">
            <summary>Sets the shim of DatabaseFactory.ClearDatabaseProviderFactory()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.CreateDatabase">
            <summary>Sets the shim of DatabaseFactory.CreateDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.CreateDatabaseString">
            <summary>Sets the shim of DatabaseFactory.CreateDatabase(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.GetCreateDatabase">
            <summary>Sets the shim of DatabaseFactory.GetCreateDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.GetCreateDefaultDatabase">
            <summary>Sets the shim of DatabaseFactory.GetCreateDefaultDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.SetDatabaseProviderFactoryDatabaseProviderFactoryBoolean">
            <summary>Sets the shim of DatabaseFactory.SetDatabaseProviderFactory(DatabaseProviderFactory factory, Boolean throwIfSet)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseFactory.SetDatabasesFuncOfDatabaseFuncOfStringDatabaseBoolean">
            <summary>Sets the shim of DatabaseFactory.SetDatabases(Func`1&lt;Database&gt; createDefaultDatabase, Func`2&lt;String,Database&gt; createNamedDatabase, Boolean throwIfSet)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.DatabaseProviderFactory</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.DatabaseProviderFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.AllInstances.CreateDefault">
            <summary>Sets the shim of DatabaseProviderFactory.CreateDefault()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.AllInstances.CreateString">
            <summary>Sets the shim of DatabaseProviderFactory.Create(String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.Constructor">
            <summary>Sets the shim of DatabaseProviderFactory.DatabaseProviderFactory()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.ConstructorFuncOfStringConfigurationSection">
            <summary>Sets the shim of DatabaseProviderFactory.DatabaseProviderFactory(Func`2&lt;String,ConfigurationSection&gt; configurationAccessor)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.ConstructorIConfigurationSource">
            <summary>Sets the shim of DatabaseProviderFactory.DatabaseProviderFactory(IConfigurationSource configurationSource)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.CreateDefault">
            <summary>Sets the shim of DatabaseProviderFactory.CreateDefault()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory.CreateString">
            <summary>Sets the shim of DatabaseProviderFactory.Create(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimDatabaseProviderFactory._ctorb__0String">
            <summary>Sets the shim of DatabaseProviderFactory.&lt;.ctor&gt;b__0(String s)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.FuncMapping</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.FuncMapping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.AllInstances.FuncGet">
            <summary>Sets the shim of FuncMapping.get_Func()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.AllInstances.FuncSetFuncOfIDataRecordObject">
            <summary>Sets the shim of FuncMapping.set_Func(Func`2&lt;IDataRecord,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.AllInstances.GetPropertyValueIDataRecord">
            <summary>Sets the shim of FuncMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.ConstructorPropertyInfoFuncOfIDataRecordObject">
            <summary>Sets the shim of FuncMapping.FuncMapping(PropertyInfo property, Func`2&lt;IDataRecord,Object&gt; func)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.FuncGet">
            <summary>Sets the shim of FuncMapping.get_Func()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.FuncSetFuncOfIDataRecordObject">
            <summary>Sets the shim of FuncMapping.set_Func(Func`2&lt;IDataRecord,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimFuncMapping.GetPropertyValueIDataRecord">
            <summary>Sets the shim of FuncMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.GenericDatabase</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.GenericDatabase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.AllInstances.DeriveParametersDbCommand">
            <summary>Sets the shim of GenericDatabase.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.ConstructorStringDbProviderFactory">
            <summary>Sets the shim of GenericDatabase.GenericDatabase(String connectionString, DbProviderFactory dbProviderFactory)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimGenericDatabase.DeriveParametersDbCommand">
            <summary>Sets the shim of GenericDatabase.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.MapBuilder`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.BuildAllProperties">
            <summary>Sets the shim of MapBuilder`1.BuildAllProperties()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.IsAutoMappablePropertyPropertyInfo">
            <summary>Sets the shim of MapBuilder`1.IsAutoMappableProperty(PropertyInfo property)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.IsCollectionTypeType">
            <summary>Sets the shim of MapBuilder`1.IsCollectionType(Type type)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.MapAllProperties">
            <summary>Sets the shim of MapBuilder`1.MapAllProperties()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1.MapNoProperties">
            <summary>Sets the shim of MapBuilder`1.MapNoProperties()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1._IsCollectionTypeb__2Type">
            <summary>Sets the shim of MapBuilder`1.&lt;IsCollectionType&gt;b__2(Type inf)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimMapBuilder`1._MapAllPropertiesb__0PropertyInfo">
            <summary>Sets the shim of MapBuilder`1.&lt;MapAllProperties&gt;b__0(PropertyInfo property)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.ParameterCache</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.ParameterCache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.AddParametersFromCacheDbCommandDatabase">
            <summary>Sets the shim of ParameterCache.AddParametersFromCache(DbCommand command, Database database)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.AllInstances.AddParametersFromCacheDbCommandDatabase">
            <summary>Sets the shim of ParameterCache.AddParametersFromCache(DbCommand command, Database database)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.AllInstances.AlreadyCachedIDbCommandDatabase">
            <summary>Sets the shim of ParameterCache.AlreadyCached(IDbCommand command, Database database)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.AllInstances.Clear">
            <summary>Sets the shim of ParameterCache.Clear()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.AllInstances.SetParametersDbCommandDatabase">
            <summary>Sets the shim of ParameterCache.SetParameters(DbCommand command, Database database)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.AlreadyCachedIDbCommandDatabase">
            <summary>Sets the shim of ParameterCache.AlreadyCached(IDbCommand command, Database database)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.Clear">
            <summary>Sets the shim of ParameterCache.Clear()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.Constructor">
            <summary>Sets the shim of ParameterCache.ParameterCache()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.CreateParameterCopyDbCommand">
            <summary>Sets the shim of ParameterCache.CreateParameterCopy(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimParameterCache.SetParametersDbCommandDatabase">
            <summary>Sets the shim of ParameterCache.SetParameters(DbCommand command, Database database)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.PropertyMapping</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.PropertyMapping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.AllInstances.MapObjectIDataRecord">
            <summary>Sets the shim of PropertyMapping.Map(Object instance, IDataRecord row)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.AllInstances.PropertyGet">
            <summary>Sets the shim of PropertyMapping.get_Property()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.AllInstances.PropertySetPropertyInfo">
            <summary>Sets the shim of PropertyMapping.set_Property(PropertyInfo value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.AllInstances.SetValueObjectObject">
            <summary>Sets the shim of PropertyMapping.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.ConstructorPropertyInfo">
            <summary>Sets the shim of PropertyMapping.PropertyMapping(PropertyInfo property)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.ConvertNonNullableValueObjectType">
            <summary>Sets the shim of PropertyMapping.ConvertNonNullableValue(Object value, Type conversionType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.ConvertNullableValueObjectType">
            <summary>Sets the shim of PropertyMapping.ConvertNullableValue(Object value, Type conversionType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.ConvertValueObjectType">
            <summary>Sets the shim of PropertyMapping.ConvertValue(Object value, Type conversionType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.IsNullableTypeType">
            <summary>Sets the shim of PropertyMapping.IsNullableType(Type t)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.MapObjectIDataRecord">
            <summary>Sets the shim of PropertyMapping.Map(Object instance, IDataRecord row)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.PropertyGet">
            <summary>Sets the shim of PropertyMapping.get_Property()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.PropertySetPropertyInfo">
            <summary>Sets the shim of PropertyMapping.set_Property(PropertyInfo value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimPropertyMapping.SetValueObjectObject">
            <summary>Sets the shim of PropertyMapping.SetValue(Object instance, Object value)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.RefCountingDataReader</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.RefCountingDataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.AllInstances.Close">
            <summary>Sets the shim of RefCountingDataReader.Close()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of RefCountingDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.Bind(System.Data.IDataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.Close">
            <summary>Sets the shim of RefCountingDataReader.Close()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.ConstructorDatabaseConnectionWrapperIDataReader">
            <summary>Sets the shim of RefCountingDataReader.RefCountingDataReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimRefCountingDataReader.DisposeBoolean">
            <summary>Sets the shim of RefCountingDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.ReflectionRowMapper`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.ReflectionRowMapper{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.AllInstances.MapRowIDataRecord">
            <summary>Sets the shim of ReflectionRowMapper`1.MapRow(IDataRecord row)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.Bind(Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.ConstructorIDictionaryOfPropertyInfoPropertyMapping">
            <summary>Sets the shim of ReflectionRowMapper`1.ReflectionRowMapper`1(IDictionary`2&lt;PropertyInfo,PropertyMapping&gt; propertyMappings)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.MapRowIDataRecord">
            <summary>Sets the shim of ReflectionRowMapper`1.MapRow(IDataRecord row)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimReflectionRowMapper`1.StaticConstructor">
            <summary>Sets the shim of ReflectionRowMapper`1.ReflectionRowMapper`1()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.AllInstances.BeginExecuteAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SprocAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.AllInstances.ExecuteObjectArray">
            <summary>Sets the shim of SprocAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.BeginExecuteAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SprocAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.ConstructorDatabaseStringIParameterMapperIResultSetMapperOfT0">
            <summary>Sets the shim of SprocAccessor`1.SprocAccessor`1(Database database, String procedureName, IParameterMapper parameterMapper, IResultSetMapper`1&lt;!0&gt; resultSetMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.ConstructorDatabaseStringIParameterMapperIRowMapperOfT0">
            <summary>Sets the shim of SprocAccessor`1.SprocAccessor`1(Database database, String procedureName, IParameterMapper parameterMapper, IRowMapper`1&lt;!0&gt; rowMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.ConstructorDatabaseStringIResultSetMapperOfT0">
            <summary>Sets the shim of SprocAccessor`1.SprocAccessor`1(Database database, String procedureName, IResultSetMapper`1&lt;!0&gt; resultSetMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.ConstructorDatabaseStringIRowMapperOfT0">
            <summary>Sets the shim of SprocAccessor`1.SprocAccessor`1(Database database, String procedureName, IRowMapper`1&lt;!0&gt; rowMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSprocAccessor`1.ExecuteObjectArray">
            <summary>Sets the shim of SprocAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.SqlStringAccessor`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.SqlStringAccessor{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.AllInstances.BeginExecuteAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlStringAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.AllInstances.ExecuteObjectArray">
            <summary>Sets the shim of SqlStringAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.BeginExecuteAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlStringAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.ConstructorDatabaseStringIParameterMapperIResultSetMapperOfT0">
            <summary>Sets the shim of SqlStringAccessor`1.SqlStringAccessor`1(Database database, String sqlString, IParameterMapper parameterMapper, IResultSetMapper`1&lt;!0&gt; resultSetMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.ConstructorDatabaseStringIParameterMapperIRowMapperOfT0">
            <summary>Sets the shim of SqlStringAccessor`1.SqlStringAccessor`1(Database database, String sqlString, IParameterMapper parameterMapper, IRowMapper`1&lt;!0&gt; rowMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.ConstructorDatabaseStringIResultSetMapperOfT0">
            <summary>Sets the shim of SqlStringAccessor`1.SqlStringAccessor`1(Database database, String sqlString, IResultSetMapper`1&lt;!0&gt; resultSetMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.ConstructorDatabaseStringIRowMapperOfT0">
            <summary>Sets the shim of SqlStringAccessor`1.SqlStringAccessor`1(Database database, String sqlString, IRowMapper`1&lt;!0&gt; rowMapper)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimSqlStringAccessor`1.ExecuteObjectArray">
            <summary>Sets the shim of SqlStringAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimTransactionScopeConnections">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.TransactionScopeConnections</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimTransactionScopeConnections.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimTransactionScopeConnections.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimTransactionScopeConnections.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimTransactionScopeConnections.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimTransactionScopeConnections.GetConnectionDatabase">
            <summary>Sets the shim of TransactionScopeConnections.GetConnection(Database db)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimTransactionScopeConnections.OnTransactionCompletedObjectTransactionEventArgs">
            <summary>Sets the shim of TransactionScopeConnections.OnTransactionCompleted(Object sender, TransactionEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.ShimTransactionScopeConnections.StaticConstructor">
            <summary>Sets the shim of TransactionScopeConnections.TransactionScopeConnections()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubColumnNameMapping">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.ColumnNameMapping</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubColumnNameMapping.#ctor(System.Reflection.PropertyInfo,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubColumnNameMapping.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubColumnNameMapping.GetPropertyValue(System.Data.IDataRecord)">
            <summary>Sets the stub of ColumnNameMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubColumnNameMapping.GetPropertyValueIDataRecord">
            <summary>Sets the stub of ColumnNameMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubColumnNameMapping.InitializeStub">
            <summary>Initializes a new instance of type StubColumnNameMapping</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubColumnNameMapping.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubColumnNameMapping.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.CommandAccessor`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.BeginExecute(System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of DataAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.BeginExecuteAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of DataAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of CommandAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.EndExecuteIAsyncResult">
            <summary>Sets the stub of CommandAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.Execute(System.Object[])">
            <summary>Sets the stub of DataAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.ExecuteObjectArray">
            <summary>Sets the stub of DataAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.InitializeStub">
            <summary>Initializes a new instance of type StubCommandAccessor</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubCommandAccessor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubConnectionString">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.ConnectionString</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubConnectionString.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubConnectionString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubConnectionString.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionString</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubConnectionString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubConnectionString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubConnectionString.ToString">
            <summary>Sets the stub of ConnectionString.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubConnectionString.ToString01">
            <summary>Sets the stub of ConnectionString.ToString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDaabAsyncResult">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.DaabAsyncResult</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDaabAsyncResult.#ctor(System.IAsyncResult,System.Data.Common.DbCommand,System.Boolean,System.Boolean,System.DateTime)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDaabAsyncResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDaabAsyncResult.InitializeStub">
            <summary>Initializes a new instance of type StubDaabAsyncResult</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDaabAsyncResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDaabAsyncResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.DataAccessor`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.BeginExecute(System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of DataAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.BeginExecuteAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of DataAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of DataAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.EndExecuteIAsyncResult">
            <summary>Sets the stub of DataAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.Execute(System.Object[])">
            <summary>Sets the stub of DataAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.ExecuteObjectArray">
            <summary>Sets the stub of DataAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.InitializeStub">
            <summary>Initializes a new instance of type StubDataAccessor</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataAccessor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.DataReaderWrapper</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.#ctor(System.Data.IDataReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.Close">
            <summary>Sets the stub of DataReaderWrapper.Close()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.Close01">
            <summary>Sets the stub of DataReaderWrapper.Close()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.Depth">
            <summary>Sets the stub of DataReaderWrapper.get_Depth()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.DepthGet">
            <summary>Sets the stub of DataReaderWrapper.get_Depth()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.Dispose(System.Boolean)">
            <summary>Sets the stub of DataReaderWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.DisposeBoolean">
            <summary>Sets the stub of DataReaderWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.FieldCount">
            <summary>Sets the stub of DataReaderWrapper.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.FieldCountGet">
            <summary>Sets the stub of DataReaderWrapper.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetBoolean(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetBoolean(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetBooleanInt32">
            <summary>Sets the stub of DataReaderWrapper.GetBoolean(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetByte(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetByte(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetByteInt32">
            <summary>Sets the stub of DataReaderWrapper.GetByte(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the stub of DataReaderWrapper.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetChar(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetChar(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetCharInt32">
            <summary>Sets the stub of DataReaderWrapper.GetChar(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the stub of DataReaderWrapper.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetData(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetData(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDataInt32">
            <summary>Sets the stub of DataReaderWrapper.GetData(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDataTypeName(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDataTypeNameInt32">
            <summary>Sets the stub of DataReaderWrapper.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDateTime(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetDateTime(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDateTimeInt32">
            <summary>Sets the stub of DataReaderWrapper.GetDateTime(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDecimal(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetDecimal(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDecimalInt32">
            <summary>Sets the stub of DataReaderWrapper.GetDecimal(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDouble(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetDouble(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetDoubleInt32">
            <summary>Sets the stub of DataReaderWrapper.GetDouble(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetFieldType(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetFieldType(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetFieldTypeInt32">
            <summary>Sets the stub of DataReaderWrapper.GetFieldType(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetFloat(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetFloat(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetFloatInt32">
            <summary>Sets the stub of DataReaderWrapper.GetFloat(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetGuid(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetGuid(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetGuidInt32">
            <summary>Sets the stub of DataReaderWrapper.GetGuid(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetInt16(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetInt16(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetInt16Int32">
            <summary>Sets the stub of DataReaderWrapper.GetInt16(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetInt32(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetInt32(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetInt32Int32">
            <summary>Sets the stub of DataReaderWrapper.GetInt32(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetInt64(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetInt64(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetInt64Int32">
            <summary>Sets the stub of DataReaderWrapper.GetInt64(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetName(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetName(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetNameInt32">
            <summary>Sets the stub of DataReaderWrapper.GetName(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetOrdinal(System.String)">
            <summary>Sets the stub of DataReaderWrapper.GetOrdinal(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetOrdinalString">
            <summary>Sets the stub of DataReaderWrapper.GetOrdinal(String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetSchemaTable">
            <summary>Sets the stub of DataReaderWrapper.GetSchemaTable()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetSchemaTable01">
            <summary>Sets the stub of DataReaderWrapper.GetSchemaTable()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetString(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetString(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetStringInt32">
            <summary>Sets the stub of DataReaderWrapper.GetString(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetValue(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetValue(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetValueInt32">
            <summary>Sets the stub of DataReaderWrapper.GetValue(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetValues(System.Object[])">
            <summary>Sets the stub of DataReaderWrapper.GetValues(Object[] values)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.GetValuesObjectArray">
            <summary>Sets the stub of DataReaderWrapper.GetValues(Object[] values)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubDataReaderWrapper</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.IsClosed">
            <summary>Sets the stub of DataReaderWrapper.get_IsClosed()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.IsClosedGet">
            <summary>Sets the stub of DataReaderWrapper.get_IsClosed()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.IsDBNull(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.IsDBNull(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.IsDBNullInt32">
            <summary>Sets the stub of DataReaderWrapper.IsDBNull(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.NextResult">
            <summary>Sets the stub of DataReaderWrapper.NextResult()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.NextResult01">
            <summary>Sets the stub of DataReaderWrapper.NextResult()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.Read">
            <summary>Sets the stub of DataReaderWrapper.Read()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.Read01">
            <summary>Sets the stub of DataReaderWrapper.Read()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.RecordsAffected">
            <summary>Sets the stub of DataReaderWrapper.get_RecordsAffected()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDataReaderWrapper.RecordsAffectedGet">
            <summary>Sets the stub of DataReaderWrapper.get_RecordsAffected()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Database</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Sets the stub of Database.AddParameter(DbCommand command, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.AddParameterDbCommandStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the stub of Database.AddParameter(DbCommand command, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.AssignParameters(System.Data.Common.DbCommand,System.Object[])">
            <summary>Sets the stub of Database.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.AssignParametersDbCommandObjectArray">
            <summary>Sets the stub of Database.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQuery(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQuery(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQuery(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQuery(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQueryCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQueryDbCommandAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQueryDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQueryDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQueryDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteNonQueryStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReader(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReader(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReader(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReader(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReader(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReaderCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReaderDbCommandAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReaderDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReaderDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteReaderStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalar(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalar(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalar(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalar(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalarCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalarDbCommandAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalarDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalarDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalarDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BeginExecuteScalarStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BuildParameterName(System.String)">
            <summary>Sets the stub of Database.BuildParameterName(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.BuildParameterNameString">
            <summary>Sets the stub of Database.BuildParameterName(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ConfigureParameter(System.Data.Common.DbParameter,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Sets the stub of Database.ConfigureParameter(DbParameter param, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ConfigureParameterDbParameterStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the stub of Database.ConfigureParameter(DbParameter param, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.CreateConnection">
            <summary>Sets the stub of Database.CreateConnection()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.CreateConnection01">
            <summary>Sets the stub of Database.CreateConnection()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.CreateWrappedReader(Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper,System.Data.IDataReader)">
            <summary>Sets the stub of Database.CreateWrappedReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.CreateWrappedReaderDatabaseConnectionWrapperIDataReader">
            <summary>Sets the stub of Database.CreateWrappedReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.DeriveParametersDbCommand">
            <summary>Sets the stub of Database.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.EndExecuteNonQuery(System.IAsyncResult)">
            <summary>Sets the stub of Database.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.EndExecuteNonQueryIAsyncResult">
            <summary>Sets the stub of Database.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.EndExecuteReader(System.IAsyncResult)">
            <summary>Sets the stub of Database.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.EndExecuteReaderIAsyncResult">
            <summary>Sets the stub of Database.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.EndExecuteScalar(System.IAsyncResult)">
            <summary>Sets the stub of Database.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.EndExecuteScalarIAsyncResult">
            <summary>Sets the stub of Database.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteDataSet(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSet(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteDataSet(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSet(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSetCommandTypeString">
            <summary>Sets the stub of Database.ExecuteDataSet(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSetDbCommand">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSetDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSetDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSetDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteDataSetStringObjectArray">
            <summary>Sets the stub of Database.ExecuteDataSet(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteNonQuery(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQuery(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteNonQuery(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQuery(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQueryCommandTypeString">
            <summary>Sets the stub of Database.ExecuteNonQuery(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQueryDbCommand">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQueryDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQueryDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQueryDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteNonQueryStringObjectArray">
            <summary>Sets the stub of Database.ExecuteNonQuery(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteReaderDbCommand">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteReaderDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteScalar(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalar(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteScalar(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalar(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalarCommandTypeString">
            <summary>Sets the stub of Database.ExecuteScalar(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalarDbCommand">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalarDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalarDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalarDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.ExecuteScalarStringObjectArray">
            <summary>Sets the stub of Database.ExecuteScalar(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.GetParameterValue(System.Data.Common.DbCommand,System.String)">
            <summary>Sets the stub of Database.GetParameterValue(DbCommand command, String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.GetParameterValueDbCommandString">
            <summary>Sets the stub of Database.GetParameterValue(DbCommand command, String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.GetStoredProcCommand(System.String)">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.GetStoredProcCommand(System.String,System.Object[])">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.GetStoredProcCommandString">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.GetStoredProcCommandStringObjectArray">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.GetWrappedConnection">
            <summary>Sets the stub of Database.GetWrappedConnection()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.GetWrappedConnection01">
            <summary>Sets the stub of Database.GetWrappedConnection()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.InitializeStub">
            <summary>Initializes a new instance of type StubDatabase</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[])">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[],System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSet(System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>Sets the stub of Database.LoadDataSet(CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSet(System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>Sets the stub of Database.LoadDataSet(String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSet(System.Data.Common.DbTransaction,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>Sets the stub of Database.LoadDataSet(DbTransaction transaction, String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSetCommandTypeStringDataSetStringArray">
            <summary>Sets the stub of Database.LoadDataSet(CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSetDbCommandDataSetString">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSetDbCommandDataSetStringArray">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSetDbCommandDataSetStringArrayDbTransaction">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSetDbCommandDataSetStringDbTransaction">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSetDbTransactionStringDataSetStringArrayObjectArray">
            <summary>Sets the stub of Database.LoadDataSet(DbTransaction transaction, String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.LoadDataSetStringDataSetStringArrayObjectArray">
            <summary>Sets the stub of Database.LoadDataSet(String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SameNumberOfParametersAndValues(System.Data.Common.DbCommand,System.Object[])">
            <summary>Sets the stub of Database.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SameNumberOfParametersAndValuesDbCommandObjectArray">
            <summary>Sets the stub of Database.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SetParameterValue(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>Sets the stub of Database.SetParameterValue(DbCommand command, String parameterName, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SetParameterValueDbCommandStringObject">
            <summary>Sets the stub of Database.SetParameterValue(DbCommand command, String parameterName, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
            <summary>Sets the stub of Database.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SetUpRowUpdatedEventDbDataAdapter">
            <summary>Sets the stub of Database.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SupportsAsync">
            <summary>Sets the stub of Database.get_SupportsAsync()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SupportsAsyncGet">
            <summary>Sets the stub of Database.get_SupportsAsync()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SupportsParemeterDiscovery">
            <summary>Sets the stub of Database.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.SupportsParemeterDiscoveryGet">
            <summary>Sets the stub of Database.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.UserParametersStartIndex">
            <summary>Sets the stub of Database.UserParametersStartIndex()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabase.UserParametersStartIndex01">
            <summary>Sets the stub of Database.UserParametersStartIndex()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseConnectionWrapper">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseConnectionWrapper.#ctor(System.Data.Common.DbConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseConnectionWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseConnectionWrapper.Dispose(System.Boolean)">
            <summary>Sets the stub of DatabaseConnectionWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseConnectionWrapper.DisposeBoolean">
            <summary>Sets the stub of DatabaseConnectionWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseConnectionWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseConnectionWrapper</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseConnectionWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseConnectionWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseProviderFactory">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.DatabaseProviderFactory</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseProviderFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseProviderFactory.#ctor(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseProviderFactory.#ctor(System.Func{System.String,System.Configuration.ConfigurationSection})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseProviderFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseProviderFactory.InitializeStub">
            <summary>Initializes a new instance of type StubDatabaseProviderFactory</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseProviderFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubDatabaseProviderFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubFuncMapping">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.FuncMapping</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubFuncMapping.#ctor(System.Reflection.PropertyInfo,System.Func{System.Data.IDataRecord,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubFuncMapping.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubFuncMapping.GetPropertyValue(System.Data.IDataRecord)">
            <summary>Sets the stub of FuncMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubFuncMapping.GetPropertyValueIDataRecord">
            <summary>Sets the stub of FuncMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubFuncMapping.InitializeStub">
            <summary>Initializes a new instance of type StubFuncMapping</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubFuncMapping.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubFuncMapping.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.GenericDatabase</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Sets the stub of Database.AddParameter(DbCommand command, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.AddParameterDbCommandStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the stub of Database.AddParameter(DbCommand command, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.AssignParameters(System.Data.Common.DbCommand,System.Object[])">
            <summary>Sets the stub of Database.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.AssignParametersDbCommandObjectArray">
            <summary>Sets the stub of Database.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQuery(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQuery(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQuery(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQuery(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQueryCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQueryDbCommandAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQueryDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQueryDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQueryDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteNonQueryStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReader(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReader(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReader(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReader(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReader(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReaderCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReaderDbCommandAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReaderDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReaderDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteReaderStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalar(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalar(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalar(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalar(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalarCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalarDbCommandAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalarDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalarDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalarDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BeginExecuteScalarStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of Database.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BuildParameterName(System.String)">
            <summary>Sets the stub of Database.BuildParameterName(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.BuildParameterNameString">
            <summary>Sets the stub of Database.BuildParameterName(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ConfigureParameter(System.Data.Common.DbParameter,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Sets the stub of Database.ConfigureParameter(DbParameter param, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ConfigureParameterDbParameterStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the stub of Database.ConfigureParameter(DbParameter param, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.CreateConnection">
            <summary>Sets the stub of Database.CreateConnection()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.CreateConnection01">
            <summary>Sets the stub of Database.CreateConnection()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.CreateWrappedReader(Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper,System.Data.IDataReader)">
            <summary>Sets the stub of Database.CreateWrappedReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.CreateWrappedReaderDatabaseConnectionWrapperIDataReader">
            <summary>Sets the stub of Database.CreateWrappedReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>Sets the stub of GenericDatabase.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.DeriveParametersDbCommand">
            <summary>Sets the stub of GenericDatabase.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.EndExecuteNonQuery(System.IAsyncResult)">
            <summary>Sets the stub of Database.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.EndExecuteNonQueryIAsyncResult">
            <summary>Sets the stub of Database.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.EndExecuteReader(System.IAsyncResult)">
            <summary>Sets the stub of Database.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.EndExecuteReaderIAsyncResult">
            <summary>Sets the stub of Database.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.EndExecuteScalar(System.IAsyncResult)">
            <summary>Sets the stub of Database.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.EndExecuteScalarIAsyncResult">
            <summary>Sets the stub of Database.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteDataSet(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSet(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteDataSet(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSet(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSetCommandTypeString">
            <summary>Sets the stub of Database.ExecuteDataSet(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSetDbCommand">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSetDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSetDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSetDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteDataSetStringObjectArray">
            <summary>Sets the stub of Database.ExecuteDataSet(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteNonQuery(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQuery(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteNonQuery(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQuery(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQueryCommandTypeString">
            <summary>Sets the stub of Database.ExecuteNonQuery(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQueryDbCommand">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQueryDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQueryDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQueryDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteNonQueryStringObjectArray">
            <summary>Sets the stub of Database.ExecuteNonQuery(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteReaderDbCommand">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteReaderDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalar(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteScalar(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteScalar(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalar(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalarCommandTypeString">
            <summary>Sets the stub of Database.ExecuteScalar(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalarDbCommand">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalarDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalarDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalarDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.ExecuteScalarStringObjectArray">
            <summary>Sets the stub of Database.ExecuteScalar(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.GetParameterValue(System.Data.Common.DbCommand,System.String)">
            <summary>Sets the stub of Database.GetParameterValue(DbCommand command, String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.GetParameterValueDbCommandString">
            <summary>Sets the stub of Database.GetParameterValue(DbCommand command, String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.GetStoredProcCommand(System.String)">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.GetStoredProcCommand(System.String,System.Object[])">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.GetStoredProcCommandString">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.GetStoredProcCommandStringObjectArray">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.GetWrappedConnection">
            <summary>Sets the stub of Database.GetWrappedConnection()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.GetWrappedConnection01">
            <summary>Sets the stub of Database.GetWrappedConnection()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.InitializeStub">
            <summary>Initializes a new instance of type StubGenericDatabase</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[])">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[],System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSet(System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>Sets the stub of Database.LoadDataSet(CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSet(System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>Sets the stub of Database.LoadDataSet(String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSet(System.Data.Common.DbTransaction,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>Sets the stub of Database.LoadDataSet(DbTransaction transaction, String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSetCommandTypeStringDataSetStringArray">
            <summary>Sets the stub of Database.LoadDataSet(CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSetDbCommandDataSetString">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSetDbCommandDataSetStringArray">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSetDbCommandDataSetStringArrayDbTransaction">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSetDbCommandDataSetStringDbTransaction">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSetDbTransactionStringDataSetStringArrayObjectArray">
            <summary>Sets the stub of Database.LoadDataSet(DbTransaction transaction, String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.LoadDataSetStringDataSetStringArrayObjectArray">
            <summary>Sets the stub of Database.LoadDataSet(String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SameNumberOfParametersAndValues(System.Data.Common.DbCommand,System.Object[])">
            <summary>Sets the stub of Database.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SameNumberOfParametersAndValuesDbCommandObjectArray">
            <summary>Sets the stub of Database.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SetParameterValue(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>Sets the stub of Database.SetParameterValue(DbCommand command, String parameterName, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SetParameterValueDbCommandStringObject">
            <summary>Sets the stub of Database.SetParameterValue(DbCommand command, String parameterName, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
            <summary>Sets the stub of Database.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SetUpRowUpdatedEventDbDataAdapter">
            <summary>Sets the stub of Database.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SupportsAsync">
            <summary>Sets the stub of Database.get_SupportsAsync()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SupportsAsyncGet">
            <summary>Sets the stub of Database.get_SupportsAsync()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SupportsParemeterDiscovery">
            <summary>Sets the stub of Database.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.SupportsParemeterDiscoveryGet">
            <summary>Sets the stub of Database.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.UserParametersStartIndex">
            <summary>Sets the stub of Database.UserParametersStartIndex()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubGenericDatabase.UserParametersStartIndex01">
            <summary>Sets the stub of Database.UserParametersStartIndex()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContext`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.#ctor">
            <summary>Initializes a new instance of type StubIMapBuilderContext</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Build">
            <summary>Sets the stub of IMapBuilderContext`1.Build()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.DoNotMapOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContext{`0}})">
            <summary>Sets stubs of DoNotMap(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.DoNotMapPropertyInfo">
            <summary>Sets the stub of IMapBuilderContext`1.DoNotMap(PropertyInfo property)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.MapByNameOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContext{`0}})">
            <summary>Sets stubs of MapByName(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.MapByNamePropertyInfo">
            <summary>Sets the stub of IMapBuilderContext`1.MapByName(PropertyInfo property)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.MapOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContextMap{`0,``0}})">
            <summary>Sets stubs of Map(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.MapPropertyInfo">
            <summary>Sets the stub of IMapBuilderContext`1.Map(PropertyInfo property)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#Build">
            <summary>Sets the stub of IMapBuilderContext`1.Build()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#DoNotMap``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Sets the stub of IMapBuilderContext`1.DoNotMap(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#DoNotMap(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of IMapBuilderContext`1.DoNotMap(PropertyInfo property)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#Map(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of IMapBuilderContext`1.Map(PropertyInfo property)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#Map``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Sets the stub of IMapBuilderContext`1.Map(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#MapByName``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Sets the stub of IMapBuilderContext`1.MapByName(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#MapByName(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of IMapBuilderContext`1.MapByName(PropertyInfo property)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContext`1.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContextMap`2</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.#ctor">
            <summary>Initializes a new instance of type StubIMapBuilderContextMap</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContextMap{TResult,TMember}#ToColumn(System.String)">
            <summary>Sets the stub of IMapBuilderContextMap`2.ToColumn(String columnName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContextMap{TResult,TMember}#WithFunc(System.Func{System.Data.IDataRecord,`1})">
            <summary>Sets the stub of IMapBuilderContextMap`2.WithFunc(Func`2&lt;IDataRecord,!1&gt; f)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.ToColumnString">
            <summary>Sets the stub of IMapBuilderContextMap`2.ToColumn(String columnName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextMap`2.WithFuncFuncOfIDataRecordT1">
            <summary>Sets the stub of IMapBuilderContextMap`2.WithFunc(Func`2&lt;IDataRecord,!1&gt; f)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContextTest`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.#ctor">
            <summary>Initializes a new instance of type StubIMapBuilderContextTest</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Build">
            <summary>Sets the stub of IMapBuilderContext`1.Build()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.DoNotMapOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContext{`0}})">
            <summary>Sets stubs of DoNotMap(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.DoNotMapPropertyInfo">
            <summary>Sets the stub of IMapBuilderContext`1.DoNotMap(PropertyInfo property)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.EqualsObject">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.GetPropertyMappings">
            <summary>Sets the stub of IMapBuilderContextTest`1.GetPropertyMappings()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.MapByNameOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContext{`0}})">
            <summary>Sets stubs of MapByName(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.MapByNamePropertyInfo">
            <summary>Sets the stub of IMapBuilderContext`1.MapByName(PropertyInfo property)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.MapOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},Microsoft.Practices.EnterpriseLibrary.Data.IMapBuilderContextMap{`0,``0}})">
            <summary>Sets stubs of Map(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.MapPropertyInfo">
            <summary>Sets the stub of IMapBuilderContext`1.Map(PropertyInfo property)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#Equals(System.Object)">
            <summary>Sets the stub of IFluentInterface.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetHashCode">
            <summary>Sets the stub of IFluentInterface.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#GetType">
            <summary>Sets the stub of IFluentInterface.GetType()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Common#IFluentInterface#ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContextTest{TResult}#GetPropertyMappings">
            <summary>Sets the stub of IMapBuilderContextTest`1.GetPropertyMappings()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#Build">
            <summary>Sets the stub of IMapBuilderContext`1.Build()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#DoNotMap``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Sets the stub of IMapBuilderContext`1.DoNotMap(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#DoNotMap(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of IMapBuilderContext`1.DoNotMap(PropertyInfo property)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#Map(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of IMapBuilderContext`1.Map(PropertyInfo property)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#Map``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Sets the stub of IMapBuilderContext`1.Map(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#MapByName``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Sets the stub of IMapBuilderContext`1.MapByName(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; propertySelector)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.Microsoft#Practices#EnterpriseLibrary#Data#IMapBuilderContext{TResult}#MapByName(System.Reflection.PropertyInfo)">
            <summary>Sets the stub of IMapBuilderContext`1.MapByName(PropertyInfo property)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIMapBuilderContextTest`1.ToString">
            <summary>Sets the stub of IFluentInterface.ToString()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIParameterMapper">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIParameterMapper.#ctor">
            <summary>Initializes a new instance of type StubIParameterMapper</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIParameterMapper.AssignParametersDbCommandObjectArray">
            <summary>Sets the stub of IParameterMapper.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIParameterMapper.Microsoft#Practices#EnterpriseLibrary#Data#IParameterMapper#AssignParameters(System.Data.Common.DbCommand,System.Object[])">
            <summary>Sets the stub of IParameterMapper.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIResultSetMapper`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIResultSetMapper`1.#ctor">
            <summary>Initializes a new instance of type StubIResultSetMapper</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIResultSetMapper`1.MapSetIDataReader">
            <summary>Sets the stub of IResultSetMapper`1.MapSet(IDataReader reader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIResultSetMapper`1.Microsoft#Practices#EnterpriseLibrary#Data#IResultSetMapper{TResult}#MapSet(System.Data.IDataReader)">
            <summary>Sets the stub of IResultSetMapper`1.MapSet(IDataReader reader)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIRowMapper`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIRowMapper`1.#ctor">
            <summary>Initializes a new instance of type StubIRowMapper</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIRowMapper`1.MapRowIDataRecord">
            <summary>Sets the stub of IRowMapper`1.MapRow(IDataRecord row)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubIRowMapper`1.Microsoft#Practices#EnterpriseLibrary#Data#IRowMapper{TResult}#MapRow(System.Data.IDataRecord)">
            <summary>Sets the stub of IRowMapper`1.MapRow(IDataRecord row)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubParameterCache">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.ParameterCache</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubParameterCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubParameterCache.AddParametersFromCache(System.Data.Common.DbCommand,Microsoft.Practices.EnterpriseLibrary.Data.Database)">
            <summary>Sets the stub of ParameterCache.AddParametersFromCache(DbCommand command, Database database)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubParameterCache.AddParametersFromCacheDbCommandDatabase">
            <summary>Sets the stub of ParameterCache.AddParametersFromCache(DbCommand command, Database database)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubParameterCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubParameterCache.InitializeStub">
            <summary>Initializes a new instance of type StubParameterCache</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubParameterCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubParameterCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubPropertyMapping">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.PropertyMapping</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubPropertyMapping.#ctor(System.Reflection.PropertyInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubPropertyMapping.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubPropertyMapping.GetPropertyValue(System.Data.IDataRecord)">
            <summary>Sets the stub of PropertyMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubPropertyMapping.GetPropertyValueIDataRecord">
            <summary>Sets the stub of PropertyMapping.GetPropertyValue(IDataRecord row)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubPropertyMapping.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyMapping</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubPropertyMapping.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubPropertyMapping.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.RefCountingDataReader</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper,System.Data.IDataReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.Close">
            <summary>Sets the stub of RefCountingDataReader.Close()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.Close01">
            <summary>Sets the stub of RefCountingDataReader.Close()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.Depth">
            <summary>Sets the stub of DataReaderWrapper.get_Depth()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.DepthGet">
            <summary>Sets the stub of DataReaderWrapper.get_Depth()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.Dispose(System.Boolean)">
            <summary>Sets the stub of RefCountingDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.DisposeBoolean">
            <summary>Sets the stub of RefCountingDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.FieldCount">
            <summary>Sets the stub of DataReaderWrapper.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.FieldCountGet">
            <summary>Sets the stub of DataReaderWrapper.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetBoolean(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetBoolean(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetBooleanInt32">
            <summary>Sets the stub of DataReaderWrapper.GetBoolean(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetByte(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetByte(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetByteInt32">
            <summary>Sets the stub of DataReaderWrapper.GetByte(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the stub of DataReaderWrapper.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetChar(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetChar(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetCharInt32">
            <summary>Sets the stub of DataReaderWrapper.GetChar(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the stub of DataReaderWrapper.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetData(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetData(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDataInt32">
            <summary>Sets the stub of DataReaderWrapper.GetData(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDataTypeName(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDataTypeNameInt32">
            <summary>Sets the stub of DataReaderWrapper.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDateTime(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetDateTime(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDateTimeInt32">
            <summary>Sets the stub of DataReaderWrapper.GetDateTime(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDecimal(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetDecimal(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDecimalInt32">
            <summary>Sets the stub of DataReaderWrapper.GetDecimal(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDouble(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetDouble(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetDoubleInt32">
            <summary>Sets the stub of DataReaderWrapper.GetDouble(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetFieldType(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetFieldType(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetFieldTypeInt32">
            <summary>Sets the stub of DataReaderWrapper.GetFieldType(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetFloat(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetFloat(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetFloatInt32">
            <summary>Sets the stub of DataReaderWrapper.GetFloat(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetGuid(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetGuid(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetGuidInt32">
            <summary>Sets the stub of DataReaderWrapper.GetGuid(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetInt16(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetInt16(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetInt16Int32">
            <summary>Sets the stub of DataReaderWrapper.GetInt16(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetInt32(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetInt32(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetInt32Int32">
            <summary>Sets the stub of DataReaderWrapper.GetInt32(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetInt64(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetInt64(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetInt64Int32">
            <summary>Sets the stub of DataReaderWrapper.GetInt64(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetName(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetName(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetNameInt32">
            <summary>Sets the stub of DataReaderWrapper.GetName(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetOrdinal(System.String)">
            <summary>Sets the stub of DataReaderWrapper.GetOrdinal(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetOrdinalString">
            <summary>Sets the stub of DataReaderWrapper.GetOrdinal(String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetSchemaTable">
            <summary>Sets the stub of DataReaderWrapper.GetSchemaTable()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetSchemaTable01">
            <summary>Sets the stub of DataReaderWrapper.GetSchemaTable()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetString(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetString(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetStringInt32">
            <summary>Sets the stub of DataReaderWrapper.GetString(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetValue(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.GetValue(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetValueInt32">
            <summary>Sets the stub of DataReaderWrapper.GetValue(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetValues(System.Object[])">
            <summary>Sets the stub of DataReaderWrapper.GetValues(Object[] values)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.GetValuesObjectArray">
            <summary>Sets the stub of DataReaderWrapper.GetValues(Object[] values)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.InitializeStub">
            <summary>Initializes a new instance of type StubRefCountingDataReader</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.IsClosed">
            <summary>Sets the stub of DataReaderWrapper.get_IsClosed()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.IsClosedGet">
            <summary>Sets the stub of DataReaderWrapper.get_IsClosed()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.IsDBNull(System.Int32)">
            <summary>Sets the stub of DataReaderWrapper.IsDBNull(Int32 i)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.IsDBNullInt32">
            <summary>Sets the stub of DataReaderWrapper.IsDBNull(Int32 i)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.NextResult">
            <summary>Sets the stub of DataReaderWrapper.NextResult()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.NextResult01">
            <summary>Sets the stub of DataReaderWrapper.NextResult()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.Read">
            <summary>Sets the stub of DataReaderWrapper.Read()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.Read01">
            <summary>Sets the stub of DataReaderWrapper.Read()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.RecordsAffected">
            <summary>Sets the stub of DataReaderWrapper.get_RecordsAffected()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubRefCountingDataReader.RecordsAffectedGet">
            <summary>Sets the stub of DataReaderWrapper.get_RecordsAffected()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubReflectionRowMapper`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.ReflectionRowMapper`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubReflectionRowMapper`1.#ctor(System.Collections.Generic.IDictionary{System.Reflection.PropertyInfo,Microsoft.Practices.EnterpriseLibrary.Data.PropertyMapping})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubReflectionRowMapper`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubReflectionRowMapper`1.InitializeStub">
            <summary>Initializes a new instance of type StubReflectionRowMapper</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubReflectionRowMapper`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubReflectionRowMapper`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.SprocAccessor`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.BeginExecute(System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of SprocAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.BeginExecuteAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of SprocAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of CommandAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.EndExecuteIAsyncResult">
            <summary>Sets the stub of CommandAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.Execute(System.Object[])">
            <summary>Sets the stub of SprocAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.ExecuteObjectArray">
            <summary>Sets the stub of SprocAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.InitializeStub">
            <summary>Initializes a new instance of type StubSprocAccessor</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSprocAccessor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.SqlStringAccessor`1</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IResultSetMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String,Microsoft.Practices.EnterpriseLibrary.Data.IParameterMapper,Microsoft.Practices.EnterpriseLibrary.Data.IRowMapper{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.BeginExecute(System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of SqlStringAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.BeginExecuteAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of SqlStringAccessor`1.BeginExecute(AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of CommandAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.EndExecuteIAsyncResult">
            <summary>Sets the stub of CommandAccessor`1.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.Execute(System.Object[])">
            <summary>Sets the stub of SqlStringAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.ExecuteObjectArray">
            <summary>Sets the stub of SqlStringAccessor`1.Execute(Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.InitializeStub">
            <summary>Initializes a new instance of type StubSqlStringAccessor</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Fakes.StubSqlStringAccessor`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.AllInstances.NameGet">
            <summary>Sets the shim of OracleConnectionData.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.AllInstances.NameSetString">
            <summary>Sets the shim of OracleConnectionData.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.AllInstances.PackagesGet">
            <summary>Sets the shim of OracleConnectionData.get_Packages()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.Bind(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IObjectWithName)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.Constructor">
            <summary>Sets the shim of OracleConnectionData.OracleConnectionData()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.NameGet">
            <summary>Sets the shim of OracleConnectionData.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.NameSetString">
            <summary>Sets the shim of OracleConnectionData.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionData.PackagesGet">
            <summary>Sets the shim of OracleConnectionData.get_Packages()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionSettings</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.AllInstances.OracleConnectionsDataGet">
            <summary>Sets the shim of OracleConnectionSettings.get_OracleConnectionsData()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.Constructor">
            <summary>Sets the shim of OracleConnectionSettings.OracleConnectionSettings()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.GetSettingsIConfigurationSource">
            <summary>Sets the shim of OracleConnectionSettings.GetSettings(IConfigurationSource configurationSource)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleConnectionSettings.OracleConnectionsDataGet">
            <summary>Sets the shim of OracleConnectionSettings.get_OracleConnectionsData()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleDatabaseData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleDatabaseData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.AllInstances.BuildDatabase">
            <summary>Sets the shim of OracleDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.AllInstances.ConnectionDataGet">
            <summary>Sets the shim of OracleDatabaseData.get_ConnectionData()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.AllInstances.ConnectionDataSetOracleConnectionData">
            <summary>Sets the shim of OracleDatabaseData.set_ConnectionData(OracleConnectionData value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.AllInstances.PackageMappingsGet">
            <summary>Sets the shim of OracleDatabaseData.get_PackageMappings()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.BuildDatabase">
            <summary>Sets the shim of OracleDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.ConnectionDataGet">
            <summary>Sets the shim of OracleDatabaseData.get_ConnectionData()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.ConnectionDataSetOracleConnectionData">
            <summary>Sets the shim of OracleDatabaseData.set_ConnectionData(OracleConnectionData value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.ConstructorConnectionStringSettingsFuncOfStringConfigurationSection">
            <summary>Sets the shim of OracleDatabaseData.OracleDatabaseData(ConnectionStringSettings connectionStringSettings, Func`2&lt;String,ConfigurationSection&gt; configurationSource)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOracleDatabaseData.PackageMappingsGet">
            <summary>Sets the shim of OracleDatabaseData.get_PackageMappings()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OraclePackageData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OraclePackageData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.AllInstances.NameGet">
            <summary>Sets the shim of OraclePackageData.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.AllInstances.NameSetString">
            <summary>Sets the shim of OraclePackageData.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.AllInstances.PrefixGet">
            <summary>Sets the shim of OraclePackageData.get_Prefix()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.AllInstances.PrefixSetString">
            <summary>Sets the shim of OraclePackageData.set_Prefix(String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.Bind(Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IObjectWithName)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.Bind(Microsoft.Practices.EnterpriseLibrary.Data.Oracle.IOraclePackage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.Constructor">
            <summary>Sets the shim of OraclePackageData.OraclePackageData()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.ConstructorStringString">
            <summary>Sets the shim of OraclePackageData.OraclePackageData(String name, String prefix)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.NameGet">
            <summary>Sets the shim of OraclePackageData.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.NameSetString">
            <summary>Sets the shim of OraclePackageData.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.PrefixGet">
            <summary>Sets the shim of OraclePackageData.get_Prefix()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.ShimOraclePackageData.PrefixSetString">
            <summary>Sets the shim of OraclePackageData.set_Prefix(String value)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubOracleConnectionData.Name as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.InitializeStub">
            <summary>Initializes a new instance of type StubOracleConnectionData</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.Name">
            <summary>Sets the stub of OracleConnectionData.get_Name()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.NameGet">
            <summary>Sets the stub of OracleConnectionData.get_Name()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.NameSetString">
            <summary>Sets the stub of OracleConnectionData.set_Name(String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionData.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleConnectionSettings</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.DeserializeSection(System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.DeserializeSectionXmlReader">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.GetRuntimeObject">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.GetRuntimeObject01">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.InitializeStub">
            <summary>Initializes a new instance of type StubOracleConnectionSettings</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.IsModified">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.IsModified01">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ResetModified">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ResetModified01">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleConnectionSettings.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleDatabaseData">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OracleDatabaseData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleDatabaseData.#ctor(System.Configuration.ConnectionStringSettings,System.Func{System.String,System.Configuration.ConfigurationSection})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleDatabaseData.BuildDatabase">
            <summary>Sets the stub of OracleDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleDatabaseData.BuildDatabase01">
            <summary>Sets the stub of OracleDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleDatabaseData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleDatabaseData.InitializeStub">
            <summary>Initializes a new instance of type StubOracleDatabaseData</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleDatabaseData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOracleDatabaseData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.OraclePackageData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubOraclePackageData.Name as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.InitializeStub">
            <summary>Initializes a new instance of type StubOraclePackageData</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.IsModified">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.IsModified01">
            <summary>Sets the stub of ConfigurationElement.IsModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.Name">
            <summary>Sets the stub of OraclePackageData.get_Name()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.NameGet">
            <summary>Sets the stub of OraclePackageData.get_Name()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.NameSetString">
            <summary>Sets the stub of OraclePackageData.set_Name(String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.ResetModified">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.ResetModified01">
            <summary>Sets the stub of ConfigurationElement.ResetModified()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Configuration.Fakes.StubOraclePackageData.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.OracleDataReaderWrapper</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Oracle.OracleDataReaderWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.AllInstances.GetBooleanInt32">
            <summary>Sets the shim of OracleDataReaderWrapper.GetBoolean(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.AllInstances.GetByteInt32">
            <summary>Sets the shim of OracleDataReaderWrapper.GetByte(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.AllInstances.GetGuidInt32">
            <summary>Sets the shim of OracleDataReaderWrapper.GetGuid(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.AllInstances.GetInt16Int32">
            <summary>Sets the shim of OracleDataReaderWrapper.GetInt16(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.AllInstances.InnerReaderGet">
            <summary>Sets the shim of OracleDataReaderWrapper.get_InnerReader()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of OracleDataReaderWrapper.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.Bind(System.Data.IDataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.ConstructorOracleDataReader">
            <summary>Sets the shim of OracleDataReaderWrapper.OracleDataReaderWrapper(OracleDataReader innerReader)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.GetBooleanInt32">
            <summary>Sets the shim of OracleDataReaderWrapper.GetBoolean(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.GetByteInt32">
            <summary>Sets the shim of OracleDataReaderWrapper.GetByte(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.GetGuidInt32">
            <summary>Sets the shim of OracleDataReaderWrapper.GetGuid(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.GetInt16Int32">
            <summary>Sets the shim of OracleDataReaderWrapper.GetInt16(Int32 index)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.InnerReaderGet">
            <summary>Sets the shim of OracleDataReaderWrapper.get_InnerReader()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimOracleDataReaderWrapper.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of OracleDataReaderWrapper.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.RefCountingOracleDataReaderWrapper</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Oracle.RefCountingOracleDataReaderWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.AllInstances.Close">
            <summary>Sets the shim of RefCountingOracleDataReaderWrapper.Close()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.AllInstances.DisposeBoolean">
            <summary>Sets the shim of RefCountingOracleDataReaderWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.Bind(System.Data.IDataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.Close">
            <summary>Sets the shim of RefCountingOracleDataReaderWrapper.Close()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.ConstructorDatabaseConnectionWrapperOracleDataReader">
            <summary>Sets the shim of RefCountingOracleDataReaderWrapper.RefCountingOracleDataReaderWrapper(DatabaseConnectionWrapper connection, OracleDataReader innerReader)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.ShimRefCountingOracleDataReaderWrapper.DisposeBoolean">
            <summary>Sets the shim of RefCountingOracleDataReaderWrapper.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.StubIOraclePackage">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Oracle.IOraclePackage</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.StubIOraclePackage.#ctor">
            <summary>Initializes a new instance of type StubIOraclePackage</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.StubIOraclePackage.Microsoft#Practices#EnterpriseLibrary#Data#Oracle#IOraclePackage#Name">
            <summary>Sets the stub of IOraclePackage.get_Name()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.StubIOraclePackage.NameGet">
            <summary>Sets the stub of IOraclePackage.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.StubIOraclePackage.Microsoft#Practices#EnterpriseLibrary#Data#Oracle#IOraclePackage#Prefix">
            <summary>Sets the stub of IOraclePackage.get_Prefix()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Oracle.Fakes.StubIOraclePackage.PrefixGet">
            <summary>Sets the stub of IOraclePackage.get_Prefix()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.SqlDatabaseData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.SqlDatabaseData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.AllInstances.BuildDatabase">
            <summary>Sets the shim of SqlDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.BuildDatabase">
            <summary>Sets the shim of SqlDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.ShimSqlDatabaseData.ConstructorConnectionStringSettingsFuncOfStringConfigurationSection">
            <summary>Sets the shim of SqlDatabaseData.SqlDatabaseData(ConnectionStringSettings connectionStringSettings, Func`2&lt;String,ConfigurationSection&gt; configurationSource)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.StubSqlDatabaseData">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.SqlDatabaseData</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.StubSqlDatabaseData.#ctor(System.Configuration.ConnectionStringSettings,System.Func{System.String,System.Configuration.ConfigurationSection})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.StubSqlDatabaseData.BuildDatabase">
            <summary>Sets the stub of SqlDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.StubSqlDatabaseData.BuildDatabase01">
            <summary>Sets the stub of SqlDatabaseData.BuildDatabase()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.StubSqlDatabaseData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.StubSqlDatabaseData.InitializeStub">
            <summary>Initializes a new instance of type StubSqlDatabaseData</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.StubSqlDatabaseData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Configuration.Fakes.StubSqlDatabaseData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase">
            <summary>Shim type of Microsoft.Practices.EnterpriseLibrary.Data.Sql.SqlDatabase</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.#ctor(Microsoft.Practices.EnterpriseLibrary.Data.Sql.SqlDatabase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AddInParameterDbCommandStringSqlDbType">
            <summary>Sets the shim of SqlDatabase.AddInParameter(DbCommand command, String name, SqlDbType dbType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AddInParameterDbCommandStringSqlDbTypeObject">
            <summary>Sets the shim of SqlDatabase.AddInParameter(DbCommand command, String name, SqlDbType dbType, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AddInParameterDbCommandStringSqlDbTypeStringDataRowVersion">
            <summary>Sets the shim of SqlDatabase.AddInParameter(DbCommand command, String name, SqlDbType dbType, String sourceColumn, DataRowVersion sourceVersion)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AddOutParameterDbCommandStringSqlDbTypeInt32">
            <summary>Sets the shim of SqlDatabase.AddOutParameter(DbCommand command, String name, SqlDbType dbType, Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AddParameterDbCommandStringSqlDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of SqlDatabase.AddParameter(DbCommand command, String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AddParameterDbCommandStringSqlDbTypeParameterDirectionStringDataRowVersionObject">
            <summary>Sets the shim of SqlDatabase.AddParameter(DbCommand command, String name, SqlDbType dbType, ParameterDirection direction, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.AddInParameterDbCommandStringSqlDbType">
            <summary>Sets the shim of SqlDatabase.AddInParameter(DbCommand command, String name, SqlDbType dbType)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.AddInParameterDbCommandStringSqlDbTypeObject">
            <summary>Sets the shim of SqlDatabase.AddInParameter(DbCommand command, String name, SqlDbType dbType, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.AddInParameterDbCommandStringSqlDbTypeStringDataRowVersion">
            <summary>Sets the shim of SqlDatabase.AddInParameter(DbCommand command, String name, SqlDbType dbType, String sourceColumn, DataRowVersion sourceVersion)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.AddOutParameterDbCommandStringSqlDbTypeInt32">
            <summary>Sets the shim of SqlDatabase.AddOutParameter(DbCommand command, String name, SqlDbType dbType, Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.AddParameterDbCommandStringSqlDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of SqlDatabase.AddParameter(DbCommand command, String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.AddParameterDbCommandStringSqlDbTypeParameterDirectionStringDataRowVersionObject">
            <summary>Sets the shim of SqlDatabase.AddParameter(DbCommand command, String name, SqlDbType dbType, ParameterDirection direction, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteNonQueryCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteNonQueryDbCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteNonQueryDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteNonQueryDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteNonQueryDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteNonQueryStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteReaderCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteReaderDbCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteReaderDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteReaderDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteReaderStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteScalarCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteScalarDbCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteScalarDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteScalarDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteScalarDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteScalarStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteXmlReaderDbCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteXmlReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BeginExecuteXmlReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteXmlReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.BuildParameterNameString">
            <summary>Sets the shim of SqlDatabase.BuildParameterName(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.ConfigureParameterSqlParameterStringSqlDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of SqlDatabase.ConfigureParameter(SqlParameter param, String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.CreateParameterStringSqlDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of SqlDatabase.CreateParameter(String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.DeriveParametersDbCommand">
            <summary>Sets the shim of SqlDatabase.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.DoBeginExecuteNonQuerySqlCommandBooleanAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.DoBeginExecuteNonQuery(SqlCommand command, Boolean disposeCommand, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.DoBeginExecuteReaderSqlCommandBooleanAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.DoBeginExecuteReader(SqlCommand command, Boolean disposeCommand, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.DoBeginExecuteXmlReaderSqlCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.DoBeginExecuteXmlReader(SqlCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.DoExecuteXmlReaderSqlCommand">
            <summary>Sets the shim of SqlDatabase.DoExecuteXmlReader(SqlCommand sqlCommand)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.EndExecuteNonQueryIAsyncResult">
            <summary>Sets the shim of SqlDatabase.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.EndExecuteReaderIAsyncResult">
            <summary>Sets the shim of SqlDatabase.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.EndExecuteScalarIAsyncResult">
            <summary>Sets the shim of SqlDatabase.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.EndExecuteXmlReaderIAsyncResult">
            <summary>Sets the shim of SqlDatabase.EndExecuteXmlReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.ExecuteXmlReaderDbCommand">
            <summary>Sets the shim of SqlDatabase.ExecuteXmlReader(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.ExecuteXmlReaderDbCommandDbTransaction">
            <summary>Sets the shim of SqlDatabase.ExecuteXmlReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.OnSqlRowUpdatedObjectSqlRowUpdatedEventArgs">
            <summary>Sets the shim of SqlDatabase.OnSqlRowUpdated(Object sender, SqlRowUpdatedEventArgs rowThatCouldNotBeWritten)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.ParameterTokenGet">
            <summary>Sets the shim of SqlDatabase.get_ParameterToken()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.SameNumberOfParametersAndValuesDbCommandObjectArray">
            <summary>Sets the shim of SqlDatabase.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.SetUpRowUpdatedEventDbDataAdapter">
            <summary>Sets the shim of SqlDatabase.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.SupportsAsyncGet">
            <summary>Sets the shim of SqlDatabase.get_SupportsAsync()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.SupportsParemeterDiscoveryGet">
            <summary>Sets the shim of SqlDatabase.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.AllInstances.UserParametersStartIndex">
            <summary>Sets the shim of SqlDatabase.UserParametersStartIndex()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteNonQueryCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteNonQueryDbCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteNonQueryDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteNonQueryDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteNonQueryDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteNonQueryStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteReaderCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteReaderDbCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteReaderDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteReaderDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteReaderStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteScalarCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteScalarDbCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteScalarDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteScalarDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteScalarDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteScalarStringAsyncCallbackObjectObjectArray">
            <summary>Sets the shim of SqlDatabase.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteXmlReaderDbCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteXmlReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BeginExecuteXmlReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.BeginExecuteXmlReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.BuildParameterNameString">
            <summary>Sets the shim of SqlDatabase.BuildParameterName(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.CheckIfSqlCommandDbCommand">
            <summary>Sets the shim of SqlDatabase.CheckIfSqlCommand(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.CleanupConnectionFromAsyncOperationDaabAsyncResult">
            <summary>Sets the shim of SqlDatabase.CleanupConnectionFromAsyncOperation(DaabAsyncResult daabAsyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.ConfigureParameterSqlParameterStringSqlDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of SqlDatabase.ConfigureParameter(SqlParameter param, String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.ConstructorString">
            <summary>Sets the shim of SqlDatabase.SqlDatabase(String connectionString)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.CreateParameterStringSqlDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of SqlDatabase.CreateParameter(String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.CreateSqlCommandByCommandTypeCommandTypeString">
            <summary>Sets the shim of SqlDatabase.CreateSqlCommandByCommandType(CommandType commandType, String commandText)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.DeriveParametersDbCommand">
            <summary>Sets the shim of SqlDatabase.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.DoBeginExecuteNonQuerySqlCommandBooleanAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.DoBeginExecuteNonQuery(SqlCommand command, Boolean disposeCommand, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.DoBeginExecuteReaderSqlCommandBooleanAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.DoBeginExecuteReader(SqlCommand command, Boolean disposeCommand, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.DoBeginExecuteXmlReaderSqlCommandAsyncCallbackObject">
            <summary>Sets the shim of SqlDatabase.DoBeginExecuteXmlReader(SqlCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.DoExecuteXmlReaderSqlCommand">
            <summary>Sets the shim of SqlDatabase.DoExecuteXmlReader(SqlCommand sqlCommand)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.EndExecuteNonQueryIAsyncResult">
            <summary>Sets the shim of SqlDatabase.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.EndExecuteReaderIAsyncResult">
            <summary>Sets the shim of SqlDatabase.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.EndExecuteScalarIAsyncResult">
            <summary>Sets the shim of SqlDatabase.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.EndExecuteXmlReaderIAsyncResult">
            <summary>Sets the shim of SqlDatabase.EndExecuteXmlReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.ExecuteXmlReaderDbCommand">
            <summary>Sets the shim of SqlDatabase.ExecuteXmlReader(DbCommand command)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.ExecuteXmlReaderDbCommandDbTransaction">
            <summary>Sets the shim of SqlDatabase.ExecuteXmlReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.OnSqlRowUpdatedObjectSqlRowUpdatedEventArgs">
            <summary>Sets the shim of SqlDatabase.OnSqlRowUpdated(Object sender, SqlRowUpdatedEventArgs rowThatCouldNotBeWritten)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.ParameterTokenGet">
            <summary>Sets the shim of SqlDatabase.get_ParameterToken()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.SameNumberOfParametersAndValuesDbCommandObjectArray">
            <summary>Sets the shim of SqlDatabase.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.SetUpRowUpdatedEventDbDataAdapter">
            <summary>Sets the shim of SqlDatabase.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.SupportsAsyncGet">
            <summary>Sets the shim of SqlDatabase.get_SupportsAsync()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.SupportsParemeterDiscoveryGet">
            <summary>Sets the shim of SqlDatabase.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.ShimSqlDatabase.UserParametersStartIndex">
            <summary>Sets the shim of SqlDatabase.UserParametersStartIndex()</summary>
        </member>
        <member name="T:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase">
            <summary>Stub type of Microsoft.Practices.EnterpriseLibrary.Data.Sql.SqlDatabase</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Sets the stub of Database.AddParameter(DbCommand command, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Sets the stub of SqlDatabase.AddParameter(DbCommand command, String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.AddParameterDbCommandStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the stub of Database.AddParameter(DbCommand command, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.AddParameterDbCommandStringSqlDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the stub of SqlDatabase.AddParameter(DbCommand command, String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.AssignParameters(System.Data.Common.DbCommand,System.Object[])">
            <summary>Sets the stub of Database.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.AssignParametersDbCommandObjectArray">
            <summary>Sets the stub of Database.AssignParameters(DbCommand command, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQuery(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQuery(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQuery(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQuery(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQueryCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQueryDbCommandAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQueryDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQueryDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQueryDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteNonQueryStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of SqlDatabase.BeginExecuteNonQuery(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReader(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReader(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReader(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReader(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReader(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReaderCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReaderDbCommandAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReaderDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReaderDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReaderDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteReaderStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of SqlDatabase.BeginExecuteReader(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalar(System.Data.Common.DbCommand,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalar(System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalar(System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalar(System.Data.Common.DbTransaction,System.String,System.AsyncCallback,System.Object,System.Object[])">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalarCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalarDbCommandAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(DbCommand command, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalarDbCommandDbTransactionAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(DbCommand command, DbTransaction transaction, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalarDbTransactionCommandTypeStringAsyncCallbackObject">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalarDbTransactionStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(DbTransaction transaction, String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BeginExecuteScalarStringAsyncCallbackObjectObjectArray">
            <summary>Sets the stub of SqlDatabase.BeginExecuteScalar(String storedProcedureName, AsyncCallback callback, Object state, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BuildParameterName(System.String)">
            <summary>Sets the stub of SqlDatabase.BuildParameterName(String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.BuildParameterNameString">
            <summary>Sets the stub of SqlDatabase.BuildParameterName(String name)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ConfigureParameter(System.Data.Common.DbParameter,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Sets the stub of Database.ConfigureParameter(DbParameter param, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ConfigureParameter(System.Data.SqlClient.SqlParameter,System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>Sets the stub of SqlDatabase.ConfigureParameter(SqlParameter param, String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ConfigureParameterDbParameterStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the stub of Database.ConfigureParameter(DbParameter param, String name, DbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ConfigureParameterSqlParameterStringSqlDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the stub of SqlDatabase.ConfigureParameter(SqlParameter param, String name, SqlDbType dbType, Int32 size, ParameterDirection direction, Boolean nullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion sourceVersion, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.CreateConnection">
            <summary>Sets the stub of Database.CreateConnection()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.CreateConnection01">
            <summary>Sets the stub of Database.CreateConnection()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.CreateWrappedReader(Microsoft.Practices.EnterpriseLibrary.Data.DatabaseConnectionWrapper,System.Data.IDataReader)">
            <summary>Sets the stub of Database.CreateWrappedReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.CreateWrappedReaderDatabaseConnectionWrapperIDataReader">
            <summary>Sets the stub of Database.CreateWrappedReader(DatabaseConnectionWrapper connection, IDataReader innerReader)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>Sets the stub of SqlDatabase.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.DeriveParametersDbCommand">
            <summary>Sets the stub of SqlDatabase.DeriveParameters(DbCommand discoveryCommand)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.EndExecuteNonQuery(System.IAsyncResult)">
            <summary>Sets the stub of SqlDatabase.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.EndExecuteNonQueryIAsyncResult">
            <summary>Sets the stub of SqlDatabase.EndExecuteNonQuery(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.EndExecuteReader(System.IAsyncResult)">
            <summary>Sets the stub of SqlDatabase.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.EndExecuteReaderIAsyncResult">
            <summary>Sets the stub of SqlDatabase.EndExecuteReader(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.EndExecuteScalar(System.IAsyncResult)">
            <summary>Sets the stub of SqlDatabase.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.EndExecuteScalarIAsyncResult">
            <summary>Sets the stub of SqlDatabase.EndExecuteScalar(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteDataSet(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSet(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteDataSet(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSet(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSetCommandTypeString">
            <summary>Sets the stub of Database.ExecuteDataSet(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSetDbCommand">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSetDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteDataSet(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSetDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSetDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteDataSet(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteDataSetStringObjectArray">
            <summary>Sets the stub of Database.ExecuteDataSet(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQuery(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteNonQuery(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteNonQuery(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQuery(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQueryCommandTypeString">
            <summary>Sets the stub of Database.ExecuteNonQuery(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQueryDbCommand">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQueryDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQueryDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQueryDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteNonQuery(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteNonQueryStringObjectArray">
            <summary>Sets the stub of Database.ExecuteNonQuery(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteReaderDbCommand">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteReaderDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteReader(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalar(System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteScalar(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteScalar(CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalar(System.Data.Common.DbTransaction,System.String,System.Object[])">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalarCommandTypeString">
            <summary>Sets the stub of Database.ExecuteScalar(CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalarDbCommand">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalarDbCommandDbTransaction">
            <summary>Sets the stub of Database.ExecuteScalar(DbCommand command, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalarDbTransactionCommandTypeString">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, CommandType commandType, String commandText)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalarDbTransactionStringObjectArray">
            <summary>Sets the stub of Database.ExecuteScalar(DbTransaction transaction, String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.ExecuteScalarStringObjectArray">
            <summary>Sets the stub of Database.ExecuteScalar(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.GetParameterValue(System.Data.Common.DbCommand,System.String)">
            <summary>Sets the stub of Database.GetParameterValue(DbCommand command, String name)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.GetParameterValueDbCommandString">
            <summary>Sets the stub of Database.GetParameterValue(DbCommand command, String name)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.GetStoredProcCommand(System.String)">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.GetStoredProcCommand(System.String,System.Object[])">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.GetStoredProcCommandString">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.GetStoredProcCommandStringObjectArray">
            <summary>Sets the stub of Database.GetStoredProcCommand(String storedProcedureName, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.GetWrappedConnection">
            <summary>Sets the stub of Database.GetWrappedConnection()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.GetWrappedConnection01">
            <summary>Sets the stub of Database.GetWrappedConnection()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.InitializeStub">
            <summary>Initializes a new instance of type StubSqlDatabase</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[])">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String,System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[],System.Data.Common.DbTransaction)">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames, DbTransaction transaction)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSet(System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>Sets the stub of Database.LoadDataSet(CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSet(System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>Sets the stub of Database.LoadDataSet(String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSet(System.Data.Common.DbTransaction,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>Sets the stub of Database.LoadDataSet(DbTransaction transaction, String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSetCommandTypeStringDataSetStringArray">
            <summary>Sets the stub of Database.LoadDataSet(CommandType commandType, String commandText, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSetDbCommandDataSetString">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSetDbCommandDataSetStringArray">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSetDbCommandDataSetStringArrayDbTransaction">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String[] tableNames, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSetDbCommandDataSetStringDbTransaction">
            <summary>Sets the stub of Database.LoadDataSet(DbCommand command, DataSet dataSet, String tableName, DbTransaction transaction)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSetDbTransactionStringDataSetStringArrayObjectArray">
            <summary>Sets the stub of Database.LoadDataSet(DbTransaction transaction, String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.LoadDataSetStringDataSetStringArrayObjectArray">
            <summary>Sets the stub of Database.LoadDataSet(String storedProcedureName, DataSet dataSet, String[] tableNames, Object[] parameterValues)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SameNumberOfParametersAndValues(System.Data.Common.DbCommand,System.Object[])">
            <summary>Sets the stub of SqlDatabase.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SameNumberOfParametersAndValuesDbCommandObjectArray">
            <summary>Sets the stub of SqlDatabase.SameNumberOfParametersAndValues(DbCommand command, Object[] values)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SetParameterValue(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>Sets the stub of Database.SetParameterValue(DbCommand command, String parameterName, Object value)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SetParameterValueDbCommandStringObject">
            <summary>Sets the stub of Database.SetParameterValue(DbCommand command, String parameterName, Object value)</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
            <summary>Sets the stub of SqlDatabase.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SetUpRowUpdatedEventDbDataAdapter">
            <summary>Sets the stub of SqlDatabase.SetUpRowUpdatedEvent(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SupportsAsync">
            <summary>Sets the stub of SqlDatabase.get_SupportsAsync()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SupportsAsyncGet">
            <summary>Sets the stub of SqlDatabase.get_SupportsAsync()</summary>
        </member>
        <member name="P:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SupportsParemeterDiscovery">
            <summary>Sets the stub of SqlDatabase.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.SupportsParemeterDiscoveryGet">
            <summary>Sets the stub of SqlDatabase.get_SupportsParemeterDiscovery()</summary>
        </member>
        <member name="M:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.UserParametersStartIndex">
            <summary>Sets the stub of SqlDatabase.UserParametersStartIndex()</summary>
        </member>
        <member name="F:Microsoft.Practices.EnterpriseLibrary.Data.Sql.Fakes.StubSqlDatabase.UserParametersStartIndex01">
            <summary>Sets the stub of SqlDatabase.UserParametersStartIndex()</summary>
        </member>
    </members>
</doc>
